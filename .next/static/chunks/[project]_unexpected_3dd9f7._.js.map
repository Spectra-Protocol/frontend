{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/components/area/index.tsx"],"sourcesContent":["'use client';\n\nimport clsx from \"clsx\";\nimport React from \"react\";\n\n\ninterface AreaWrapperProps extends React.HTMLAttributes<HTMLDivElement> {\n}\n\nexport const AreaWrapper: React.FC<AreaWrapperProps> = ({ className, ...props }) => {\n    return (\n        <div className={clsx(\"flex flex-col gap-4 rounded-[32px] items-start\", className)} {...props}>\n            {props.children}\n        </div>\n    );\n}\n\ninterface AreaHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n    title?: string;\n    subtitle?: string;\n    icon?: React.ReactNode;\n}\n\nexport const AreaHeader: React.FC<AreaHeaderProps> = ({ title, subtitle, icon, ...props }) => {\n    return (\n        <div className=\"flex flex-row items-center gap-4 justify-center w-full\" {...props}>\n            {icon}\n            <div className=\"w-full justify-start flex flex-col\">\n                <h1 className=\"text-lg font-semibold text-foreground-900\">{title}</h1>\n                <p className=\"text-xs text-default-500\">{subtitle}</p>\n            </div>\n        </div>\n    );\n}\n\ninterface AreaMainProps extends React.HTMLAttributes<HTMLDivElement> {\n}\n\nexport const AreaMain: React.FC<AreaMainProps> = ({ ...props }) => {\n    return (\n        <div className=\"w-full\" {...props}>\n            {props.children}\n        </div>\n    );\n}\n\ninterface AreaProps extends React.HTMLAttributes<HTMLDivElement> {\n    labelPlacement?: \"outside\" | \"inside\";\n    showLabel?: boolean;\n    classNames?: {\n        wrapper?: AreaWrapperProps[\"className\"];\n        header?: AreaHeaderProps[\"className\"];\n        main?: AreaMainProps[\"className\"];\n    };\n}\n\nexport const AreaContext = React.createContext<AreaProps>({ labelPlacement: \"inside\", showLabel: true });\nexport const useArea = () => React.useContext(AreaContext);\n\nexport const Area: React.FC<AreaProps> = ({ labelPlacement = \"inside\", showLabel = true, ...props }) => {\n    return (\n        <AreaContext.Provider value={{ labelPlacement, showLabel }}>\n            <AreaWrapper className={props.classNames?.wrapper}>\n                {props.children}\n            </AreaWrapper>\n        </AreaContext.Provider>\n    );\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;AASO,MAAM,cAA0C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO;IAC3E,qBACI,2MAAC;QAAI,WAAW,CAAA,GAAA,sJAAA,CAAA,UAAI,AAAD,EAAE,kDAAkD;QAAa,GAAG,KAAK;kBACvF,MAAM,QAAQ;;;;;;AAG3B;KANa;AAcN,MAAM,aAAwC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,OAAO;IACrF,qBACI,2MAAC;QAAI,WAAU;QAA0D,GAAG,KAAK;;YAC5E;0BACD,2MAAC;gBAAI,WAAU;;kCACX,2MAAC;wBAAG,WAAU;kCAA6C;;;;;;kCAC3D,2MAAC;wBAAE,WAAU;kCAA4B;;;;;;;;;;;;;;;;;;AAIzD;MAVa;AAeN,MAAM,WAAoC,CAAC,EAAE,GAAG,OAAO;IAC1D,qBACI,2MAAC;QAAI,WAAU;QAAU,GAAG,KAAK;kBAC5B,MAAM,QAAQ;;;;;;AAG3B;MANa;AAkBN,MAAM,4BAAc,2KAAA,CAAA,UAAK,CAAC,aAAa,CAAY;IAAE,gBAAgB;IAAU,WAAW;AAAK;AAC/F,MAAM,UAAU;;IAAM,OAAA,2KAAA,CAAA,UAAK,CAAC,UAAU,CAAC;AAAW;GAA5C;AAEN,MAAM,OAA4B,CAAC,EAAE,iBAAiB,QAAQ,EAAE,YAAY,IAAI,EAAE,GAAG,OAAO;IAC/F,qBACI,2MAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAgB;QAAU;kBACrD,cAAA,2MAAC;YAAY,WAAW,MAAM,UAAU,EAAE;sBACrC,MAAM,QAAQ;;;;;;;;;;;AAI/B;MARa"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/components/dashboard/charts/BarChart.tsx"],"sourcesContent":["'use client';\n\nimport clsx from 'clsx';\nimport React from 'react';\n\ninterface CustomBarChartHeaderProps {\n    title?: string | React.ReactNode;\n    subtitle?: string | React.ReactNode;\n    icon?: React.ReactNode;\n    description?: string | React.ReactNode;\n}\nexport const CustomBarChartHeader: React.FC<CustomBarChartHeaderProps> = (props) => {\n    return (\n        <div className=\"flex flex-col gap-2 w-full items-start\">\n            <div className=\"flex flex-row gap-2\">\n                {props.icon}\n                <div className='flex flex-col'>\n                    <h1 className=\"text-lg font-semibold text-foreground-900\">{props.title}</h1>\n                    <p className=\"text-sm text-foreground-500\">{props.subtitle}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\ninterface CustomBarChartWrapperProps extends React.HTMLAttributes<HTMLDivElement> {\n}\n\nexport const CustomBarChartWrapper: React.FC<CustomBarChartWrapperProps> = (props) => {\n    return (\n        <div {...props} className={clsx(\n            \"bg-foreground-50 rounded-[24px] shadow-lg p-8 space-y-8\",\n            props.className\n        )}>\n            {props.children}\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;;;;AAAA;;;AAWO,MAAM,uBAA4D,CAAC;IACtE,qBACI,2MAAC;QAAI,WAAU;kBACX,cAAA,2MAAC;YAAI,WAAU;;gBACV,MAAM,IAAI;8BACX,2MAAC;oBAAI,WAAU;;sCACX,2MAAC;4BAAG,WAAU;sCAA6C,MAAM,KAAK;;;;;;sCACtE,2MAAC;4BAAE,WAAU;sCAA+B,MAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;;;AAK9E;KAZa;AAiBN,MAAM,wBAA8D,CAAC;IACxE,qBACI,2MAAC;QAAK,GAAG,KAAK;QAAE,WAAW,CAAA,GAAA,sJAAA,CAAA,UAAI,AAAD,EAC1B,2DACA,MAAM,SAAS;kBAEd,MAAM,QAAQ;;;;;;AAG3B;MATa"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(project)/projects/[address]/components/MetricChartArea/MetricChart.tsx"],"sourcesContent":["'use client';\n\nimport { CustomBarChartHeader, CustomBarChartWrapper } from \"@/components/dashboard/charts\";\nimport clsx from \"clsx\";\nimport { Bar, Legend, Tooltip, ResponsiveContainer, XAxis, YAxis, LegendProps, BarChart } from \"recharts\";\n\nfunction RenderLegend(prop: LegendProps) {\n    const { payload } = prop;\n    return (\n        <div className=\"flex flex-row gap-4 w-full items-center justify-center\">\n            {payload && payload.map((entry, index) => {\n                return (\n                    <div key={`item-${index}`} className=\"flex flex-row items-center gap-2\">\n                        <div\n                            className={clsx(\n                                \"w-4 h-4 rounded-md\",\n                            )}\n                            style={{\n                                backgroundColor: entry.color\n                            }}\n                        />\n                        <p className=\"text-xs font-semibold text-foreground-500 capitalize\">{entry.value}</p>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\nexport default function MetricChart() {\n    return (\n        <CustomBarChartWrapper>\n            <CustomBarChartHeader\n                title=\"Sales\"\n                subtitle=\"Last 7 days\"\n                description=\"Total sales in the last 7 days\"\n            />\n            <ResponsiveContainer width=\"100%\" height={400}>\n                <BarChart\n                    barGap={3}\n                    barSize={16}\n                    height={300}\n                    data={[\n                        { day: \"Monday\", value: 100 },\n                        { day: \"Tuesday\", value: 200 },\n                        { day: \"Wednesday\", value: 300 },\n                        { day: \"Thursday\", value: 400 },\n                        { day: \"Friday\", value: 500 },\n                        { day: \"Saturday\", value: 600 },\n                        { day: \"Sunday\", value: 700 },\n                    ]}\n                >\n                    <XAxis dataKey=\"day\"\n                        axisLine={false}\n                        tickLine={false}\n                    />\n                    <YAxis dataKey={\"value\"}\n                        axisLine={false}\n                        tickLine={false}\n                    />\n                    <Tooltip\n                        labelClassName=\"text-xs font-semibold text-foreground-500\"\n                        itemStyle={{\n                            color: \"hsl(var(--color-foreground-900))\",\n                        }}\n                        wrapperClassName=\"!bg-foreground-100 !border-none rounded-[12px] !shadow p-2\"\n                        cursor={{\n                            fill: \"transparent\",\n                        }} />\n                    <Legend\n                        className=\"rounded-[12px] font-normal\"\n                        content={<RenderLegend />}\n                    />\n                    <Bar dataKey=\"value\" fill=\"#9353D3\" radius={4} />\n                </BarChart>\n            </ResponsiveContainer >\n        </CustomBarChartWrapper>\n    )\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;;;;AAMA,SAAS,aAAa,IAAiB;IACnC,MAAM,EAAE,OAAO,EAAE,GAAG;IACpB,qBACI,2MAAC;QAAI,WAAU;kBACV,WAAW,QAAQ,GAAG,CAAC,CAAC,OAAO;YAC5B,qBACI,2MAAC;gBAA0B,WAAU;;kCACjC,2MAAC;wBACG,WAAW,CAAA,GAAA,sJAAA,CAAA,UAAI,AAAD,EACV;wBAEJ,OAAO;4BACH,iBAAiB,MAAM,KAAK;wBAChC;;;;;;kCAEJ,2MAAC;wBAAE,WAAU;kCAAwD,MAAM,KAAK;;;;;;;eAT1E,CAAC,KAAK,EAAE,MAAM,CAAC;;;;;QAYjC;;;;;;AAGZ;KArBS;AAsBM,SAAS;IACpB,qBACI,2MAAC,+JAAA,CAAA,wBAAqB;;0BAClB,2MAAC,+JAAA,CAAA,uBAAoB;gBACjB,OAAM;gBACN,UAAS;gBACT,aAAY;;;;;;0BAEhB,2MAAC,oLAAA,CAAA,sBAAmB;gBAAC,OAAM;gBAAO,QAAQ;0BACtC,cAAA,2MAAC,qKAAA,CAAA,WAAQ;oBACL,QAAQ;oBACR,SAAS;oBACT,QAAQ;oBACR,MAAM;wBACF;4BAAE,KAAK;4BAAU,OAAO;wBAAI;wBAC5B;4BAAE,KAAK;4BAAW,OAAO;wBAAI;wBAC7B;4BAAE,KAAK;4BAAa,OAAO;wBAAI;wBAC/B;4BAAE,KAAK;4BAAY,OAAO;wBAAI;wBAC9B;4BAAE,KAAK;4BAAU,OAAO;wBAAI;wBAC5B;4BAAE,KAAK;4BAAY,OAAO;wBAAI;wBAC9B;4BAAE,KAAK;4BAAU,OAAO;wBAAI;qBAC/B;;sCAED,2MAAC,sKAAA,CAAA,QAAK;4BAAC,SAAQ;4BACX,UAAU;4BACV,UAAU;;;;;;sCAEd,2MAAC,sKAAA,CAAA,QAAK;4BAAC,SAAS;4BACZ,UAAU;4BACV,UAAU;;;;;;sCAEd,2MAAC,wKAAA,CAAA,UAAO;4BACJ,gBAAe;4BACf,WAAW;gCACP,OAAO;4BACX;4BACA,kBAAiB;4BACjB,QAAQ;gCACJ,MAAM;4BACV;;;;;;sCACJ,2MAAC,uKAAA,CAAA,SAAM;4BACH,WAAU;4BACV,uBAAS,2MAAC;;;;;;;;;;sCAEd,2MAAC,oKAAA,CAAA,MAAG;4BAAC,SAAQ;4BAAQ,MAAK;4BAAU,QAAQ;;;;;;;;;;;;;;;;;;;;;;;AAKhE;MAjDwB"}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(project)/projects/[address]/components/MetricChartArea/index.tsx"],"sourcesContent":["import { Area, AreaHeader, AreaMain } from \"@/app/(dashboard)/components/area\";\nimport { AnalyticsUpIcon } from \"hugeicons-react\";\nimport dynamic from \"next/dynamic\";\n\nconst DynamicMetricChart = dynamic(() => import(\"./MetricChart\"), { ssr: false });\n\nexport default function MetricChartArea() {\n    return (\n        <Area>\n            <AreaHeader title=\"Metric Chart\" icon={<AnalyticsUpIcon size={32}/>}/>\n            <AreaMain>\n                <DynamicMetricChart />\n            </AreaMain>\n        </Area>\n    )\n}"],"names":[],"mappings":";;;;;;;;;;;;AAIA,MAAM,qBAAqB,CAAA,GAAA,gLAAA,CAAA,UAAO,AAAD,EAAE;;;;;;IAAiC,KAAK;;KAAnE;AAES,SAAS;IACpB,qBACI,2MAAC,qKAAA,CAAA,OAAI;;0BACD,2MAAC,qKAAA,CAAA,aAAU;gBAAC,OAAM;gBAAe,oBAAM,2MAAC,8OAAA,CAAA,kBAAe;oBAAC,MAAM;;;;;;;;;;;0BAC9D,2MAAC,qKAAA,CAAA,WAAQ;0BACL,cAAA,2MAAC;;;;;;;;;;;;;;;;AAIjB;MATwB"}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}