{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/components/area/index.tsx"],"sourcesContent":["'use client';\n\nimport clsx from \"clsx\";\nimport React from \"react\";\n\n\ninterface AreaWrapperProps extends React.HTMLAttributes<HTMLDivElement> {\n}\n\nexport const AreaWrapper: React.FC<AreaWrapperProps> = ({ className, ...props }) => {\n    return (\n        <div className={clsx(\"flex flex-col gap-4 rounded-[32px] items-start\", className)} {...props}>\n            {props.children}\n        </div>\n    );\n}\n\ninterface AreaHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n    title?: string;\n    subtitle?: string;\n    icon?: React.ReactNode;\n}\n\nexport const AreaHeader: React.FC<AreaHeaderProps> = ({ title, subtitle, icon, ...props }) => {\n    return (\n        <div className=\"flex flex-row items-center gap-4 justify-center w-full\" {...props}>\n            {icon}\n            <div className=\"w-full justify-start flex flex-col\">\n                <h1 className=\"text-lg font-semibold text-foreground-900\">{title}</h1>\n                <p className=\"text-xs text-default-500\">{subtitle}</p>\n            </div>\n        </div>\n    );\n}\n\ninterface AreaMainProps extends React.HTMLAttributes<HTMLDivElement> {\n}\n\nexport const AreaMain: React.FC<AreaMainProps> = ({ ...props }) => {\n    return (\n        <div className=\"w-full\" {...props}>\n            {props.children}\n        </div>\n    );\n}\n\ninterface AreaProps extends React.HTMLAttributes<HTMLDivElement> {\n    labelPlacement?: \"outside\" | \"inside\";\n    showLabel?: boolean;\n    classNames?: {\n        wrapper?: AreaWrapperProps[\"className\"];\n        header?: AreaHeaderProps[\"className\"];\n        main?: AreaMainProps[\"className\"];\n    };\n}\n\nexport const AreaContext = React.createContext<AreaProps>({ labelPlacement: \"inside\", showLabel: true });\nexport const useArea = () => React.useContext(AreaContext);\n\nexport const Area: React.FC<AreaProps> = ({ labelPlacement = \"inside\", showLabel = true, ...props }) => {\n    return (\n        <AreaContext.Provider value={{ labelPlacement, showLabel }}>\n            <AreaWrapper className={props.classNames?.wrapper}>\n                {props.children}\n            </AreaWrapper>\n        </AreaContext.Provider>\n    );\n}"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;AASO,MAAM,cAA0C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO;IAC3E,qBACI,2MAAC;QAAI,WAAW,CAAA,GAAA,sJAAA,CAAA,UAAI,AAAD,EAAE,kDAAkD;QAAa,GAAG,KAAK;kBACvF,MAAM,QAAQ;;;;;;AAG3B;KANa;AAcN,MAAM,aAAwC,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,OAAO;IACrF,qBACI,2MAAC;QAAI,WAAU;QAA0D,GAAG,KAAK;;YAC5E;0BACD,2MAAC;gBAAI,WAAU;;kCACX,2MAAC;wBAAG,WAAU;kCAA6C;;;;;;kCAC3D,2MAAC;wBAAE,WAAU;kCAA4B;;;;;;;;;;;;;;;;;;AAIzD;MAVa;AAeN,MAAM,WAAoC,CAAC,EAAE,GAAG,OAAO;IAC1D,qBACI,2MAAC;QAAI,WAAU;QAAU,GAAG,KAAK;kBAC5B,MAAM,QAAQ;;;;;;AAG3B;MANa;AAkBN,MAAM,4BAAc,2KAAA,CAAA,UAAK,CAAC,aAAa,CAAY;IAAE,gBAAgB;IAAU,WAAW;AAAK;AAC/F,MAAM,UAAU;;IAAM,OAAA,2KAAA,CAAA,UAAK,CAAC,UAAU,CAAC;AAAW;GAA5C;AAEN,MAAM,OAA4B,CAAC,EAAE,iBAAiB,QAAQ,EAAE,YAAY,IAAI,EAAE,GAAG,OAAO;IAC/F,qBACI,2MAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAgB;QAAU;kBACrD,cAAA,2MAAC;YAAY,WAAW,MAAM,UAAU,EAAE;sBACrC,MAAM,QAAQ;;;;;;;;;;;AAI/B;MARa"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/components/dashboard/cards/DetailCard.tsx"],"sourcesContent":["\ninterface DetailCardProps extends React.PropsWithChildren<{}> {\n    title: string;\n    value: any;\n    description?: string;\n    icon?: React.ReactNode;\n    className?: string;\n}\nexport function DetailCard(props: DetailCardProps) {\n    const { title, value, icon } = props;\n\n    return (\n        <div className=\"w-fit h-fit py-3 px-4 rounded-[16px] bg-foreground-50 shadow flex flex-row gap-2\">\n            <div className=\"w-fit flex flex-col\">\n                <p className=\"text-lg font-bold text-foreground-900\">{value}</p>\n                <h6 className=\"text-sm font-medium text-foreground-500\">{title}</h6>\n            </div>\n            {icon && <div className=\"rounded-[12px] bg-foreground-200 text-foreground-500 p-2 w-fit h-fit\">\n                {icon}\n            </div>}\n        </div>\n    )\n}"],"names":[],"mappings":";;;;;;AAQO,SAAS,WAAW,KAAsB;IAC7C,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG;IAE/B,qBACI,2MAAC;QAAI,WAAU;;0BACX,2MAAC;gBAAI,WAAU;;kCACX,2MAAC;wBAAE,WAAU;kCAAyC;;;;;;kCACtD,2MAAC;wBAAG,WAAU;kCAA2C;;;;;;;;;;;;YAE5D,sBAAQ,2MAAC;gBAAI,WAAU;0BACnB;;;;;;;;;;;;AAIjB;KAdgB"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/components/dashboard/charts/BarChart.tsx"],"sourcesContent":["'use client';\n\nimport clsx from 'clsx';\nimport React from 'react';\n\ninterface CustomBarChartHeaderProps {\n    title?: string | React.ReactNode;\n    subtitle?: string | React.ReactNode;\n    icon?: React.ReactNode;\n    description?: string | React.ReactNode;\n}\nexport const CustomBarChartHeader: React.FC<CustomBarChartHeaderProps> = (props) => {\n    return (\n        <div className=\"flex flex-col gap-2 w-full items-start\">\n            <div className=\"flex flex-row gap-2\">\n                {props.icon}\n                <div className='flex flex-col'>\n                    <h1 className=\"text-lg font-semibold text-foreground-900\">{props.title}</h1>\n                    <p className=\"text-sm text-foreground-500\">{props.subtitle}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\ninterface CustomBarChartWrapperProps extends React.HTMLAttributes<HTMLDivElement> {\n}\n\nexport const CustomBarChartWrapper: React.FC<CustomBarChartWrapperProps> = (props) => {\n    return (\n        <div {...props} className={clsx(\n            \"bg-foreground-50 rounded-[24px] shadow-lg p-8 space-y-8\",\n            props.className\n        )}>\n            {props.children}\n        </div>\n    )\n}\n"],"names":[],"mappings":";;;;;;;AAAA;;;AAWO,MAAM,uBAA4D,CAAC;IACtE,qBACI,2MAAC;QAAI,WAAU;kBACX,cAAA,2MAAC;YAAI,WAAU;;gBACV,MAAM,IAAI;8BACX,2MAAC;oBAAI,WAAU;;sCACX,2MAAC;4BAAG,WAAU;sCAA6C,MAAM,KAAK;;;;;;sCACtE,2MAAC;4BAAE,WAAU;sCAA+B,MAAM,QAAQ;;;;;;;;;;;;;;;;;;;;;;;AAK9E;KAZa;AAiBN,MAAM,wBAA8D,CAAC;IACxE,qBACI,2MAAC;QAAK,GAAG,KAAK;QAAE,WAAW,CAAA,GAAA,sJAAA,CAAA,UAAI,AAAD,EAC1B,2DACA,MAAM,SAAS;kBAEd,MAAM,QAAQ;;;;;;AAG3B;MATa"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/components/dashboard/metrics/index.tsx"],"sourcesContent":["'use client';\n\nimport { MetricCategory } from \"@/types\";\nimport { Tooltip } from \"@nextui-org/react\";\nimport clsx from \"clsx\"\n\n\ninterface MetricsWrapperProps extends React.HTMLAttributes<HTMLDivElement> {\n}\nexport const MetricsWrapper: React.FC<MetricsWrapperProps> = (props) => {\n    return (\n        <div {...props} className={clsx(\n            \"bg-foreground-50 rounded-[32px] shadow p-4 space-y-8 w-full overflow-x-scroll\",\n            props.className\n        )}>\n            {props.children}\n        </div>\n    )\n}\n\ninterface MetricsTableProps extends React.HTMLAttributes<HTMLTableElement> {\n    categories: MetricCategory[];\n}\nexport const MetricsTable: React.FC<MetricsTableProps> = (props) => {\n    const { categories, className } = props;\n\n    return (\n        <MetricsWrapper>\n            <div\n                className={clsx(\n                    \"min-w-full w-fit\",\n                    \"sm:gap-4 p-4 border border-default/20 rounded-[24px]\",\n                    \"flex flex-col sm:flex-row gap-4\",\n                    className\n                )}\n            >\n                {categories &&\n                    categories.map((category) => (\n                        <div\n                            key={category.id}\n                            className=\"flex flex-col w-full sm:w-fit md:w-full gap-2\"\n                        >\n                            {category.metrics.map((metric, index) => (\n                                <div\n                                    key={metric.id}\n                                    className={clsx(\n                                        \"flex flex-row justify-between min-w-fit w-full gap-4 p-1\",\n                                        index === category.metrics.length - 1\n                                            ? \"\"\n                                            : \"border-b border-default/20 pb-2\"\n                                    )}\n                                >\n                                    <span className=\"text-base font-medium text-nowrap text-foreground-500 w-fit\">\n                                        {metric.name}\n                                    </span>\n                                    <span className=\"text-base font-medium text-foreground-900 cursor-pointer\">\n                                        <Tooltip\n                                            content={metric.value}\n                                            color=\"primary\"\n                                            placement=\"top\"\n                                        >\n                                            {Number(metric.value).toFixed(2)}\n                                        </Tooltip>\n                                    </span>\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n            </div>\n        </MetricsWrapper>\n    )\n}"],"names":[],"mappings":";;;;;;;;AAAA;;;;AASO,MAAM,iBAAgD,CAAC;IAC1D,qBACI,2MAAC;QAAK,GAAG,KAAK;QAAE,WAAW,CAAA,GAAA,sJAAA,CAAA,UAAI,AAAD,EAC1B,iFACA,MAAM,SAAS;kBAEd,MAAM,QAAQ;;;;;;AAG3B;KATa;AAcN,MAAM,eAA4C,CAAC;IACtD,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG;IAElC,qBACI,2MAAC;kBACG,cAAA,2MAAC;YACG,WAAW,CAAA,GAAA,sJAAA,CAAA,UAAI,AAAD,EACV,oBACA,wDACA,mCACA;sBAGH,cACG,WAAW,GAAG,CAAC,CAAC,yBACZ,2MAAC;oBAEG,WAAU;8BAET,SAAS,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,sBAC3B,2MAAC;4BAEG,WAAW,CAAA,GAAA,sJAAA,CAAA,UAAI,AAAD,EACV,4DACA,UAAU,SAAS,OAAO,CAAC,MAAM,GAAG,IAC9B,KACA;;8CAGV,2MAAC;oCAAK,WAAU;8CACX,OAAO,IAAI;;;;;;8CAEhB,2MAAC;oCAAK,WAAU;8CACZ,cAAA,2MAAC,uOAAA,CAAA,UAAO;wCACJ,SAAS,OAAO,KAAK;wCACrB,OAAM;wCACN,WAAU;kDAET,OAAO,OAAO,KAAK,EAAE,OAAO,CAAC;;;;;;;;;;;;2BAjBjC,OAAO,EAAE;;;;;mBALjB,SAAS,EAAE;;;;;;;;;;;;;;;AAgC5C;MAhDa"}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/types/index.ts"],"sourcesContent":["import { SVGProps } from \"react\";\n\n// ==============================\n// Frontend Types\n// ==============================\n\nexport type IconSvgProps = SVGProps<SVGSVGElement> & {\n  size?: number;\n};\n\n// ==============================\n// Core Types\n// ==============================\n\n// Transaction\nexport enum TransactionTagType {\n  Buy = \"Buy\",\n  Sell = \"Sell\",\n  Transfer = \"Transfer\",\n  Deposit = \"Deposit\",\n  Withdraw = \"Withdraw\",\n  Swap = \"Swap\",\n  Other = \"Other\",\n}\nexport interface Transaction {\n  id: string;\n  time: Date;\n  from: Profiler;\n  to: Profiler;\n  value: number | string;\n  token: Token;\n  tags: TransactionTagType[];\n}\n\n// Project\nexport interface Project {\n  address: string;\n  name: string;\n  description: string;\n\n  [key: string]: any;\n}\n\n// Profiler\nexport enum ProfilerTagType {\n  Whale = \"Whale\",\n  Fund = \"Fund\",\n  Anonymous = \"Anonymous\"\n}\nexport type Portifolio = {\n  id: string | number;\n  asset: Token;\n  price: number | string;\n  holding: number | string;\n  value: number | string;\n}\nexport interface Profiler {\n  name?: string;\n  address: string;\n  avatar?: string;\n  tag?: ProfilerTagType\n  portifolio?: Portifolio[]\n}\n\n\n// Token\n/**\n * Token\n * @param id Token id\n * @param name Token name\n * @param symbol Token symbol\n * @param address Token address\n * @param icon Token icon\n */\nexport interface Token {\n  id: string | number;\n  name: string;\n  value?: number;\n  symbol?: string;\n  address: string;\n  icon?: string;\n}\n\n\n// Key Metric\nexport interface MetricCategory {\n  id: string | number;\n  name: string;\n  metrics: KeyMetric[];\n}\nexport interface KeyMetric {\n  id: string | number;\n  name: string;\n  value: number | string;\n  unit: string;\n}"],"names":[],"mappings":";;;;;UAeY;;;;;;;;GAAA,uBAAA;;UA6BA;;;;GAAA,oBAAA"}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/components/dashboard/tag/index.tsx"],"sourcesContent":["'use client';\n\nimport { Chip } from \"@nextui-org/react\";\nimport { Tag } from \"./type\";\nimport { AnonymousIcon, Building06Icon, GroupLayersIcon } from \"hugeicons-react\";\nimport { GiWhaleTail } from \"react-icons/gi\";\n\n\nimport { ProfilerTagType } from \"@/types\";\n\ntype TagStyle = {\n    color: string;\n    backgroundColor: string;\n    icon: React.ReactNode;\n}\nconst getTagStyle = (tag: Tag): TagStyle | null => {\n    switch (tag) {\n        case \"dex-aggregator\":\n            return {\n                color: \"#936316\",\n                backgroundColor: \"#F5A524\",\n                icon: <GroupLayersIcon size={16} color=\"#312107\" />\n            };\n        case ProfilerTagType.Whale.toString():\n            return {\n                color: \"#0A0A0A\",\n                backgroundColor: \"#0C7DFF\",\n                icon: <GiWhaleTail color=\"0057BC\" size={16} />\n            };\n        case ProfilerTagType.Fund.toString():\n            return {\n                color: \"#0E793C\",\n                backgroundColor: \"#17C964\",\n                icon: <Building06Icon color=\"18974F\" size={16} />\n            };\n        case ProfilerTagType.Anonymous.toString():\n            return {\n                color: \"#F4F4F5\",\n                backgroundColor: \"#18181B\",\n                icon: <AnonymousIcon color=\"A4A4A4\" size={16} />\n            };\n        default:\n            return null;\n    }\n}\nexport default function TagCard({ tag }: { tag: Tag }) {\n    const tagStyle = getTagStyle(tag);\n\n    return (\n        <Chip\n            radius=\"sm\"\n            className=\"shadow-sm font-medium\"\n            style={{\n                color: tagStyle?.color,\n                backgroundColor: tagStyle?.backgroundColor\n            }}\n            startContent={tagStyle?.icon}\n        >\n            {tag}\n        </Chip>\n    );\n}"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;AAeA,MAAM,cAAc,CAAC;IACjB,OAAQ;QACJ,KAAK;YACD,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,2MAAC,8OAAA,CAAA,kBAAe;oBAAC,MAAM;oBAAI,OAAM;;;;;;YAC3C;QACJ,KAAK,+HAAA,CAAA,kBAAe,CAAC,KAAK,CAAC,QAAQ;YAC/B,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,2MAAC,+JAAA,CAAA,cAAW;oBAAC,OAAM;oBAAS,MAAM;;;;;;YAC5C;QACJ,KAAK,+HAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,QAAQ;YAC9B,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,2MAAC,4OAAA,CAAA,iBAAc;oBAAC,OAAM;oBAAS,MAAM;;;;;;YAC/C;QACJ,KAAK,+HAAA,CAAA,kBAAe,CAAC,SAAS,CAAC,QAAQ;YACnC,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,2MAAC,yOAAA,CAAA,gBAAa;oBAAC,OAAM;oBAAS,MAAM;;;;;;YAC9C;QACJ;YACI,OAAO;IACf;AACJ;AACe,SAAS,QAAQ,EAAE,GAAG,EAAgB;IACjD,MAAM,WAAW,YAAY;IAE7B,qBACI,2MAAC,8NAAA,CAAA,OAAI;QACD,QAAO;QACP,WAAU;QACV,OAAO;YACH,OAAO,UAAU;YACjB,iBAAiB,UAAU;QAC/B;QACA,cAAc,UAAU;kBAEvB;;;;;;AAGb;KAhBwB"}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/mock/index.tsx"],"sourcesContent":["import { KeyMetric, MetricCategory, Portifolio, Profiler, ProfilerTagType, Token, Transaction, TransactionTagType } from \"@/types\";\nimport { faker } from \"@faker-js/faker\";\n\n\nexport const mockProject = {\n    name: faker.company.name(),\n    address: faker.finance.ethereumAddress(),\n    floorPrice: faker.finance.amount({\n        symbol: \"$\",\n        autoFormat: true,\n    }),\n    avatar: faker.image.avatar(),\n    tvl: faker.finance.amount({\n        symbol: \"ETH\",\n    }),\n};\n\nexport const mockProjectsTransactions = Array.from({ length: 10 }, () => ({\n    id: faker.string.uuid(),// Add unique identifier\n    time: faker.date.recent(),\n    from: {\n        name: faker.person.suffix(),\n        address: faker.finance.ethereumAddress(),\n        avatar: faker.image.avatar(),\n    },\n    to: {\n        name: faker.person.suffix(),\n        address: faker.finance.ethereumAddress(),\n        avatar: faker.image.avatar(),\n    },\n    value: faker.finance.amount({\n        symbol: \"ETH\",\n    }),\n    token: {\n        id: faker.string.uuid(),\n        name: faker.finance.currencyName(),\n        symbol: faker.finance.currencySymbol(),\n        address: faker.finance.ethereumAddress(),\n        icon: faker.image.url(),\n    },\n    tags: [Math.random() > 0.5 ? TransactionTagType.Buy : TransactionTagType.Sell],\n} satisfies Transaction));\n\nexport const mockProjectDex = {\n    categories: [\n        {\n            id: \"1\",\n            name: \"Market Cap (30d)\",\n            metrics: [\n                {\n                    id: \"1\",\n                    name: \"Total Value Locked\",\n                    value: faker.finance.amount(),\n                    unit: \"ETH\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Daily Active Users\",\n                    value: faker.number.float(),\n                    unit: \"Users\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Transaction Volume\",\n                    value: faker.finance.amount(),\n                    unit: \"ETH\",\n                },\n                {\n                    id: \"4\",\n                    name: \"New Wallets Created\",\n                    value: faker.number.float(),\n                    unit: \"Wallets\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Exchange Volume\",\n                    value: faker.finance.amount(),\n                    unit: \"ETH\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Total Market Cap\",\n                    value: faker.finance.amount(),\n                    unit: \"ETH\",\n                },\n            ] satisfies KeyMetric[]\n        },\n        {\n            id: \"2\",\n            name: \"User Engagement\",\n            metrics: [\n                {\n                    id: \"1\",\n                    name: \"Daily Active Users\",\n                    value: faker.number.int({ min: 0, max: 100 }),\n                    unit: \"Users\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Monthly Active Users\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"Users\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Average Session Duration\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"Minutes\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Bounce Rate\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"%\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Session per User\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"Sessions\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Retention Rate\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"%\",\n                }\n            ] satisfies KeyMetric[]\n        },\n        {\n            id: \"3\",\n            name: \"Financial Metrics\",\n            metrics: [\n                {\n                    id: \"1\",\n                    name: \"Revenue\",\n                    value: faker.finance.amount(),\n                    unit: \"USD\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Profit\",\n                    value: faker.finance.amount(),\n                    unit: \"USD\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Expenses\",\n                    value: faker.finance.amount(),\n                    unit: \"USD\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Net Income\",\n                    value: faker.finance.amount(),\n                    unit: \"USD\",\n                },\n            ] satisfies KeyMetric[]\n        }\n    ] satisfies MetricCategory[]\n}\n\nexport const mockProfiler = {\n    name: faker.person.fullName(),\n    address: faker.finance.ethereumAddress(),\n    avatar: faker.image.avatar(),\n    tag: Math.random() > 0.2 ? ProfilerTagType.Whale : (Math.random() > 0.2 ? ProfilerTagType.Fund : ProfilerTagType.Anonymous),\n    portifolio: Array.from({ length: 2}, () => ({\n        id: faker.string.uuid(),\n        asset: {\n            id: faker.string.uuid(),\n            name: faker.finance.currencyName(),\n            symbol: faker.finance.currencySymbol(),\n            address: faker.finance.ethereumAddress(),\n            icon: faker.image.url(),\n        } satisfies Token,\n        price: faker.finance.amount(),\n        holding: faker.finance.amount(),\n        value: faker.finance.amount(),\n    } satisfies Portifolio)),\n} satisfies Profiler;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 742, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(project)/projects/[address]/dex/components/KeyMetricsArea/index.tsx"],"sourcesContent":["import { Area, AreaHeader, AreaMain } from \"@/app/(dashboard)/components/area\";\nimport { MetricsTable } from \"@/components/dashboard\";\nimport { mockProjectDex } from \"@/mock\";\nimport { KeyframesMultipleIcon } from \"hugeicons-react\";\n\nexport default function KeMetricsArea() {\n    const projectDex = mockProjectDex;\n\n    return (\n        <Area>\n            <AreaHeader title=\"Key Metrics\" icon={<KeyframesMultipleIcon size={32} />} />\n            <AreaMain>\n                <MetricsTable categories={projectDex.categories} />\n            </AreaMain>\n        </Area>\n    )\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;AAKe,SAAS;IACpB,MAAM,aAAa,+HAAA,CAAA,iBAAc;IAEjC,qBACI,2MAAC,qKAAA,CAAA,OAAI;;0BACD,2MAAC,qKAAA,CAAA,aAAU;gBAAC,OAAM;gBAAc,oBAAM,2MAAC,0PAAA,CAAA,wBAAqB;oBAAC,MAAM;;;;;;;;;;;0BACnE,2MAAC,qKAAA,CAAA,WAAQ;0BACL,cAAA,2MAAC,6JAAA,CAAA,eAAY;oBAAC,YAAY,WAAW,UAAU;;;;;;;;;;;;;;;;;AAI/D;KAXwB"}},
    {"offset": {"line": 798, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}