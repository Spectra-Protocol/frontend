{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(profier)/profiers/[id]/context.tsx"],"sourcesContent":["import { Profiler } from \"@/types\";\nimport React from \"react\"\n\nexport type ProfilerContextType = Partial<Profiler>\nexport const ProfilerContext = React.createContext<ProfilerContextType>({})\nexport const ProfilerProvider = ProfilerContext.Provider;\nexport const useProfiler = () => React.useContext(ProfilerContext)"],"names":[],"mappings":";;;;;;;;;AAIO,MAAM,gCAAkB,2KAAA,CAAA,UAAK,CAAC,aAAa,CAAsB,CAAC;AAClE,MAAM,mBAAmB,gBAAgB,QAAQ;AACjD,MAAM,cAAc;;IAAM,OAAA,2KAAA,CAAA,UAAK,CAAC,UAAU,CAAC;AAAe;GAApD"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(profier)/profiers/[id]/providers.tsx"],"sourcesContent":["'use client';\n\n\nimport { Profiler } from \"@/types\";\nimport { ProfilerProvider } from \"./context\";\n\ninterface ProvidersProps extends React.PropsWithChildren<{}> {\n    Profiler: Profiler;\n}\nexport default function Providers({ children, Profiler }: ProvidersProps) {\n    return (\n        <ProfilerProvider value={Profiler}>\n            {children}\n        </ProfilerProvider>\n    );\n}"],"names":[],"mappings":";;;;;;AAAA;;;AASe,SAAS,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAkB;IACpE,qBACI,2MAAC,sLAAA,CAAA,mBAAgB;QAAC,OAAO;kBACpB;;;;;;AAGb;KANwB"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/types/index.ts"],"sourcesContent":["import { SVGProps } from \"react\";\n\n// ==============================\n// Frontend Types\n// ==============================\n\nexport type IconSvgProps = SVGProps<SVGSVGElement> & {\n  size?: number;\n};\n\n// ==============================\n// Core Types\n// ==============================\n\n// Transaction\nexport enum TransactionTagType {\n  Buy = \"Buy\",\n  Sell = \"Sell\",\n  Transfer = \"Transfer\",\n  Deposit = \"Deposit\",\n  Withdraw = \"Withdraw\",\n  Swap = \"Swap\",\n  Other = \"Other\",\n}\nexport interface Transaction {\n  id: string;\n  time: Date;\n  from: Profiler;\n  to: Profiler;\n  value: number | string;\n  token: Token;\n  tags: TransactionTagType[];\n}\n\n// Project\nexport interface Project {\n  address: string;\n  name: string;\n  description: string;\n\n  [key: string]: any;\n}\n\n// Profiler\nexport enum ProfilerTagType {\n  Whale = \"Whale\",\n  Fund = \"Fund\",\n  Anonymous = \"Anonymous\"\n}\nexport interface Profiler {\n  name?: string;\n  address: string;\n  avatar?: string;\n  tag?: ProfilerTagType\n}\n\n\n// Token\nexport interface Token {\n  name: string;\n  symbol?: string;\n  address: string;\n  icon?: string;\n}\n\n\n// Key Metric\nexport interface MetricCategory {\n  id: string | number;\n  name: string;\n  metrics: KeyMetric[];\n}\nexport interface KeyMetric {\n  id: string | number;\n  name: string;\n  value: number | string;\n  unit: string;\n}"],"names":[],"mappings":";;;;;UAeY;;;;;;;;GAAA,uBAAA;;UA6BA;;;;GAAA,oBAAA"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/components/dashboard/tag/index.tsx"],"sourcesContent":["'use client';\n\nimport { Chip } from \"@nextui-org/react\";\nimport { Tag } from \"./type\";\nimport { AnonymousIcon, Building06Icon, GroupLayersIcon } from \"hugeicons-react\";\nimport { GiWhaleTail } from \"react-icons/gi\";\n\n\nimport { ProfilerTagType } from \"@/types\";\n\ntype TagStyle = {\n    color: string;\n    backgroundColor: string;\n    icon: React.ReactNode;\n}\nconst getTagStyle = (tag: Tag): TagStyle | null => {\n    switch (tag) {\n        case \"dex-aggregator\":\n            return {\n                color: \"#936316\",\n                backgroundColor: \"#F5A524\",\n                icon: <GroupLayersIcon size={16} color=\"#312107\" />\n            };\n        case ProfilerTagType.Whale.toString():\n            return {\n                color: \"#0A0A0A\",\n                backgroundColor: \"#0C7DFF\",\n                icon: <GiWhaleTail color=\"0057BC\" size={16} />\n            };\n        case ProfilerTagType.Fund.toString():\n            return {\n                color: \"#0E793C\",\n                backgroundColor: \"#17C964\",\n                icon: <Building06Icon color=\"18974F\" size={16} />\n            };\n        case ProfilerTagType.Anonymous.toString():\n            return {\n                color: \"#F4F4F5\",\n                backgroundColor: \"#18181B\",\n                icon: <AnonymousIcon color=\"A4A4A4\" size={16} />\n            };\n        default:\n            return null;\n    }\n}\nexport default function TagCard({ tag }: { tag: Tag }) {\n    const tagStyle = getTagStyle(tag);\n\n    return (\n        <Chip\n            radius=\"sm\"\n            className=\"shadow-sm font-medium\"\n            style={{\n                color: tagStyle?.color,\n                backgroundColor: tagStyle?.backgroundColor\n            }}\n            startContent={tagStyle?.icon}\n        >\n            {tag}\n        </Chip>\n    );\n}"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;AAeA,MAAM,cAAc,CAAC;IACjB,OAAQ;QACJ,KAAK;YACD,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,2MAAC,8OAAA,CAAA,kBAAe;oBAAC,MAAM;oBAAI,OAAM;;;;;;YAC3C;QACJ,KAAK,+HAAA,CAAA,kBAAe,CAAC,KAAK,CAAC,QAAQ;YAC/B,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,2MAAC,+JAAA,CAAA,cAAW;oBAAC,OAAM;oBAAS,MAAM;;;;;;YAC5C;QACJ,KAAK,+HAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,QAAQ;YAC9B,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,2MAAC,4OAAA,CAAA,iBAAc;oBAAC,OAAM;oBAAS,MAAM;;;;;;YAC/C;QACJ,KAAK,+HAAA,CAAA,kBAAe,CAAC,SAAS,CAAC,QAAQ;YACnC,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,2MAAC,yOAAA,CAAA,gBAAa;oBAAC,OAAM;oBAAS,MAAM;;;;;;YAC9C;QACJ;YACI,OAAO;IACf;AACJ;AACe,SAAS,QAAQ,EAAE,GAAG,EAAgB;IACjD,MAAM,WAAW,YAAY;IAE7B,qBACI,2MAAC,8NAAA,CAAA,OAAI;QACD,QAAO;QACP,WAAU;QACV,OAAO;YACH,OAAO,UAAU;YACjB,iBAAiB,UAAU;QAC/B;QACA,cAAc,UAAU;kBAEvB;;;;;;AAGb;KAhBwB"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/components/dashboard/profile/index.tsx"],"sourcesContent":["'use client';\n\nimport { Avatar, Chip, Image } from \"@nextui-org/react\";\n\nimport { mockProject } from \"@/mock\"\nimport { Copy02Icon, LockedIcon } from \"hugeicons-react\";\nimport { DetailCard } from \"@/components/dashboard\";\nimport { Tag } from \"../tag/type\";\nimport TagCard from \"../tag\";\n\ninterface ProfileProps extends React.HTMLAttributes<HTMLDivElement> {\n    name?: string | React.ReactNode;\n    address?: string;\n    avatar?: string | React.ReactNode;\n    tags?: Tag[];\n}\n\nexport const Profile: React.FC<ProfileProps> = (props) => {\n    const { name, avatar, address, tags } = props;\n\n    return (\n        <div className=\"w-full flex flex-row items-center gap-4\">\n            <div className=\"h-full aspect-square max-h-16\">\n                {typeof avatar === \"string\" ? (\n                    <Avatar\n                        src={avatar}\n                        alt={name as string}\n                        color=\"primary\"\n                        className=\"rounded-[12px] md:rounded-[16px] w-full h-full object-cover shadow\"\n                        showFallback\n                    />\n                ) : (\n                    avatar\n                )}\n            </div>\n\n            <div className=\"w-full h-fit flex flex-col gap-2 justify-between\">\n                <h1 className=\"w-full text-lg lg:text-3xl font-semibold text-foreground\">{name}</h1>\n                <div className=\"flex flex-row gap-2 flex-wrap items-center\">\n                    <Chip\n                        radius=\"sm\"\n                        className=\"bg-foreground-50 text-foreground-500 font-medium shadow-sm\"\n                        endContent={<Copy02Icon size={16} />}\n                    >\n                        {address?.slice(0, 5) || \"-\"}\n                    </Chip>\n                    {tags && tags.map((tag) => (\n                        <TagCard tag={tag} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAiBO,MAAM,UAAkC,CAAC;IAC5C,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG;IAExC,qBACI,2MAAC;QAAI,WAAU;;0BACX,2MAAC;gBAAI,WAAU;0BACV,OAAO,WAAW,yBACf,2MAAC,oOAAA,CAAA,SAAM;oBACH,KAAK;oBACL,KAAK;oBACL,OAAM;oBACN,WAAU;oBACV,YAAY;;;;;2BAGhB;;;;;;0BAIR,2MAAC;gBAAI,WAAU;;kCACX,2MAAC;wBAAG,WAAU;kCAA4D;;;;;;kCAC1E,2MAAC;wBAAI,WAAU;;0CACX,2MAAC,8NAAA,CAAA,OAAI;gCACD,QAAO;gCACP,WAAU;gCACV,0BAAY,2MAAC,oOAAA,CAAA,aAAU;oCAAC,MAAM;;;;;;0CAE7B,SAAS,MAAM,GAAG,MAAM;;;;;;4BAE5B,QAAQ,KAAK,GAAG,CAAC,CAAC,oBACf,2MAAC,yJAAA,CAAA,UAAO;oCAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;KApCa"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 279, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(profier)/profiers/[id]/components/Profile/index.tsx"],"sourcesContent":["'use client';\n\nimport { Profile } from \"@/components/dashboard/profile\";\nimport { useProfiler } from \"../../context\";\n\nexport default function ProfileHeader() {\n    const profiler = useProfiler();\n    \n    return (\n        <header className=\"w-full flex flex-col md:flex-row gap-4 my-4\">\n            <Profile\n                name={profiler.name}\n                avatar={profiler.avatar}\n                address={profiler.address}\n                tags={[profiler.tag as any]}\n            />\n\n        </header>\n    );\n}"],"names":[],"mappings":";;;;;;;;;AAAA;;;AAKe,SAAS;;IACpB,MAAM,WAAW,CAAA,GAAA,sLAAA,CAAA,cAAW,AAAD;IAE3B,qBACI,2MAAC;QAAO,WAAU;kBACd,cAAA,2MAAC,6JAAA,CAAA,UAAO;YACJ,MAAM,SAAS,IAAI;YACnB,QAAQ,SAAS,MAAM;YACvB,SAAS,SAAS,OAAO;YACzB,MAAM;gBAAC,SAAS,GAAG;aAAQ;;;;;;;;;;;AAK3C;GAdwB;;QACH,sLAAA,CAAA,cAAW;;;KADR"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}