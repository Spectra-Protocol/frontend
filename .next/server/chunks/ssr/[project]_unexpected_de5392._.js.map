{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(profier)/profiers/[id]/context.tsx"],"sourcesContent":["import { Profiler } from \"@/types\";\nimport React from \"react\"\n\nexport type ProfilerContextType = Partial<Profiler>\nexport const ProfilerContext = React.createContext<ProfilerContextType>({})\nexport const ProfilerProvider = ProfilerContext.Provider;\nexport const useProfiler = () => React.useContext(ProfilerContext)"],"names":[],"mappings":";;;;;;;;AAIO,MAAM,gCAAkB,6NAAA,CAAA,UAAK,CAAC,aAAa,CAAsB,CAAC;AAClE,MAAM,mBAAmB,gBAAgB,QAAQ;AACjD,MAAM,cAAc,IAAM,6NAAA,CAAA,UAAK,CAAC,UAAU,CAAC"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(profier)/profiers/[id]/providers.tsx"],"sourcesContent":["'use client';\n\n\nimport { Profiler } from \"@/types\";\nimport { ProfilerProvider } from \"./context\";\n\ninterface ProvidersProps extends React.PropsWithChildren<{}> {\n    Profiler: Profiler;\n}\nexport default function Providers({ children, Profiler }: ProvidersProps) {\n    return (\n        <ProfilerProvider value={Profiler}>\n            {children}\n        </ProfilerProvider>\n    );\n}"],"names":[],"mappings":";;;;;;AAAA;;;AASe,SAAS,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAkB;IACpE,qBACI,sQAAC,mLAAA,CAAA,mBAAgB;QAAC,OAAO;kBACpB;;;;;;AAGb"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/types/index.ts"],"sourcesContent":["import { SVGProps } from \"react\";\n\n// ==============================\n// Frontend Types\n// ==============================\n\nexport type IconSvgProps = SVGProps<SVGSVGElement> & {\n  size?: number;\n};\n\n// ==============================\n// Core Types\n// ==============================\n\n// Transaction\nexport enum TransactionTagType {\n  Buy = \"Buy\",\n  Sell = \"Sell\",\n  Transfer = \"Transfer\",\n  Deposit = \"Deposit\",\n  Withdraw = \"Withdraw\",\n  Swap = \"Swap\",\n  Other = \"Other\",\n}\nexport interface Transaction {\n  id: string;\n  time: Date;\n  from: Profiler;\n  to: Profiler;\n  value: number | string;\n  token: Token;\n  tags: TransactionTagType[];\n}\n\n// Project\nexport interface Project {\n  address: string;\n  name: string;\n  description: string;\n\n  [key: string]: any;\n}\n\n// Profiler\nexport enum ProfilerTagType {\n  Whale = \"Whale\",\n  Fund = \"Fund\",\n  Anonymous = \"Anonymous\"\n}\nexport interface Profiler {\n  name?: string;\n  address: string;\n  avatar?: string;\n  tag?: ProfilerTagType\n  portifolio?: Token[];\n}\n\n\n// Token\n/**\n * Token\n * @param name Token name\n * @param symbol Token symbol\n * @param address Token address\n * @param icon Token icon\n */\nexport interface Token {\n  name: string;\n  symbol?: string;\n  address: string;\n  icon?: string;\n}\n\n\n// Key Metric\nexport interface MetricCategory {\n  id: string | number;\n  name: string;\n  metrics: KeyMetric[];\n}\nexport interface KeyMetric {\n  id: string | number;\n  name: string;\n  value: number | string;\n  unit: string;\n}"],"names":[],"mappings":";;;;;UAeY;;;;;;;;GAAA,uBAAA;;UA6BA;;;;GAAA,oBAAA"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/components/dashboard/tag/index.tsx"],"sourcesContent":["'use client';\n\nimport { Chip } from \"@nextui-org/react\";\nimport { Tag } from \"./type\";\nimport { AnonymousIcon, Building06Icon, GroupLayersIcon } from \"hugeicons-react\";\nimport { GiWhaleTail } from \"react-icons/gi\";\n\n\nimport { ProfilerTagType } from \"@/types\";\n\ntype TagStyle = {\n    color: string;\n    backgroundColor: string;\n    icon: React.ReactNode;\n}\nconst getTagStyle = (tag: Tag): TagStyle | null => {\n    switch (tag) {\n        case \"dex-aggregator\":\n            return {\n                color: \"#936316\",\n                backgroundColor: \"#F5A524\",\n                icon: <GroupLayersIcon size={16} color=\"#312107\" />\n            };\n        case ProfilerTagType.Whale.toString():\n            return {\n                color: \"#0A0A0A\",\n                backgroundColor: \"#0C7DFF\",\n                icon: <GiWhaleTail color=\"0057BC\" size={16} />\n            };\n        case ProfilerTagType.Fund.toString():\n            return {\n                color: \"#0E793C\",\n                backgroundColor: \"#17C964\",\n                icon: <Building06Icon color=\"18974F\" size={16} />\n            };\n        case ProfilerTagType.Anonymous.toString():\n            return {\n                color: \"#F4F4F5\",\n                backgroundColor: \"#18181B\",\n                icon: <AnonymousIcon color=\"A4A4A4\" size={16} />\n            };\n        default:\n            return null;\n    }\n}\nexport default function TagCard({ tag }: { tag: Tag }) {\n    const tagStyle = getTagStyle(tag);\n\n    return (\n        <Chip\n            radius=\"sm\"\n            className=\"shadow-sm font-medium\"\n            style={{\n                color: tagStyle?.color,\n                backgroundColor: tagStyle?.backgroundColor\n            }}\n            startContent={tagStyle?.icon}\n        >\n            {tag}\n        </Chip>\n    );\n}"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;AAeA,MAAM,cAAc,CAAC;IACjB,OAAQ;QACJ,KAAK;YACD,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,sQAAC,2OAAA,CAAA,kBAAe;oBAAC,MAAM;oBAAI,OAAM;;;;;;YAC3C;QACJ,KAAK,4HAAA,CAAA,kBAAe,CAAC,KAAK,CAAC,QAAQ;YAC/B,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,sQAAC,4JAAA,CAAA,cAAW;oBAAC,OAAM;oBAAS,MAAM;;;;;;YAC5C;QACJ,KAAK,4HAAA,CAAA,kBAAe,CAAC,IAAI,CAAC,QAAQ;YAC9B,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,sQAAC,yOAAA,CAAA,iBAAc;oBAAC,OAAM;oBAAS,MAAM;;;;;;YAC/C;QACJ,KAAK,4HAAA,CAAA,kBAAe,CAAC,SAAS,CAAC,QAAQ;YACnC,OAAO;gBACH,OAAO;gBACP,iBAAiB;gBACjB,oBAAM,sQAAC,sOAAA,CAAA,gBAAa;oBAAC,OAAM;oBAAS,MAAM;;;;;;YAC9C;QACJ;YACI,OAAO;IACf;AACJ;AACe,SAAS,QAAQ,EAAE,GAAG,EAAgB;IACjD,MAAM,WAAW,YAAY;IAE7B,qBACI,sQAAC,2NAAA,CAAA,OAAI;QACD,QAAO;QACP,WAAU;QACV,OAAO;YACH,OAAO,UAAU;YACjB,iBAAiB,UAAU;QAC/B;QACA,cAAc,UAAU;kBAEvB;;;;;;AAGb"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/components/dashboard/profile/index.tsx"],"sourcesContent":["'use client';\n\nimport { Avatar, Chip, Image } from \"@nextui-org/react\";\n\nimport { mockProject } from \"@/mock\"\nimport { Copy02Icon, LockedIcon } from \"hugeicons-react\";\nimport { DetailCard } from \"@/components/dashboard\";\nimport { Tag } from \"../tag/type\";\nimport TagCard from \"../tag\";\n\ninterface ProfileProps extends React.HTMLAttributes<HTMLDivElement> {\n    name?: string | React.ReactNode;\n    address?: string;\n    avatar?: string | React.ReactNode;\n    tags?: Tag[];\n}\n\nexport const Profile: React.FC<ProfileProps> = (props) => {\n    const { name, avatar, address, tags } = props;\n\n    return (\n        <div className=\"w-full flex flex-row items-center gap-4\">\n            <div className=\"h-full aspect-square max-h-16\">\n                {typeof avatar === \"string\" ? (\n                    <Avatar\n                        src={avatar}\n                        alt={name as string}\n                        color=\"primary\"\n                        className=\"rounded-[12px] md:rounded-[16px] w-full h-full object-cover shadow\"\n                        showFallback\n                    />\n                ) : (\n                    avatar\n                )}\n            </div>\n\n            <div className=\"w-full h-fit flex flex-col gap-2 justify-between\">\n                <h1 className=\"w-full text-lg lg:text-3xl font-semibold text-foreground\">{name}</h1>\n                <div className=\"flex flex-row gap-2 flex-wrap items-center\">\n                    <Chip\n                        radius=\"sm\"\n                        className=\"bg-foreground-50 text-foreground-500 font-medium shadow-sm\"\n                        endContent={<Copy02Icon size={16} />}\n                    >\n                        {address?.slice(0, 5) || \"-\"}\n                    </Chip>\n                    {tags && tags.map((tag) => (\n                        <TagCard tag={tag} />\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;AAiBO,MAAM,UAAkC,CAAC;IAC5C,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG;IAExC,qBACI,sQAAC;QAAI,WAAU;;0BACX,sQAAC;gBAAI,WAAU;0BACV,OAAO,WAAW,yBACf,sQAAC,iOAAA,CAAA,SAAM;oBACH,KAAK;oBACL,KAAK;oBACL,OAAM;oBACN,WAAU;oBACV,YAAY;;;;;2BAGhB;;;;;;0BAIR,sQAAC;gBAAI,WAAU;;kCACX,sQAAC;wBAAG,WAAU;kCAA4D;;;;;;kCAC1E,sQAAC;wBAAI,WAAU;;0CACX,sQAAC,2NAAA,CAAA,OAAI;gCACD,QAAO;gCACP,WAAU;gCACV,0BAAY,sQAAC,iOAAA,CAAA,aAAU;oCAAC,MAAM;;;;;;0CAE7B,SAAS,MAAM,GAAG,MAAM;;;;;;4BAE5B,QAAQ,KAAK,GAAG,CAAC,CAAC,oBACf,sQAAC,sJAAA,CAAA,UAAO;oCAAC,KAAK;;;;;;;;;;;;;;;;;;;;;;;;AAMtC"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 265, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(profier)/profiers/[id]/components/Profile/index.tsx"],"sourcesContent":["'use client';\n\nimport { Profile } from \"@/components/dashboard/profile\";\nimport { useProfiler } from \"../../context\";\n\nexport default function ProfileHeader() {\n    const profiler = useProfiler();\n    \n    return (\n        <header className=\"w-full flex flex-col md:flex-row gap-4 my-4\">\n            <Profile\n                name={profiler.name}\n                avatar={profiler.avatar}\n                address={profiler.address}\n                tags={[profiler.tag as any]}\n            />\n\n        </header>\n    );\n}"],"names":[],"mappings":";;;;;;;AAAA;;;;AAKe,SAAS;IACpB,MAAM,WAAW,CAAA,GAAA,mLAAA,CAAA,cAAW,AAAD;IAE3B,qBACI,sQAAC;QAAO,WAAU;kBACd,cAAA,sQAAC,0JAAA,CAAA,UAAO;YACJ,MAAM,SAAS,IAAI;YACnB,QAAQ,SAAS,MAAM;YACvB,SAAS,SAAS,OAAO;YACzB,MAAM;gBAAC,SAAS,GAAG;aAAQ;;;;;;;;;;;AAK3C"}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(profier)/profiers/[id]/components/PortfolioArea/data.ts"],"sourcesContent":["import { Column } from \"@/components/dashboard/table\";\n\nexport const columns: Column[] = [\n    {\n        name: \"Asset\",\n        uid: \"asset\",\n        sortable: false,\n    },\n    {\n        name: \"Price\",\n        uid: \"price\",\n        sortable: true,\n    },\n    {\n        name: \"Holding\",\n        uid: \"holding\",\n        sortable: true,\n    },\n    {\n        name: \"Value\",\n        uid: \"value\",\n        sortable: true,\n    }\n];\n\n"],"names":[],"mappings":";;;AAEO,MAAM,UAAoB;IAC7B;QACI,MAAM;QACN,KAAK;QACL,UAAU;IACd;IACA;QACI,MAAM;QACN,KAAK;QACL,UAAU;IACd;IACA;QACI,MAAM;QACN,KAAK;QACL,UAAU;IACd;IACA;QACI,MAAM;QACN,KAAK;QACL,UAAU;IACd;CACH"}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/mock/index.tsx"],"sourcesContent":["import { KeyMetric, MetricCategory, Profiler, ProfilerTagType, Transaction, TransactionTagType } from \"@/types\";\nimport { faker } from \"@faker-js/faker\";\n\nexport const mockProject = {\n    name: faker.company.name(),\n    address: faker.finance.ethereumAddress(),\n    floorPrice: faker.finance.amount({\n        symbol: \"$\",\n        autoFormat: true,\n    }),\n    avatar: faker.image.avatar(),\n    tvl: faker.finance.amount({\n        symbol: \"ETH\",\n    }),\n};\n\nexport const mockProjectsTransactions = Array.from({ length: 10 }, () => ({\n    id: faker.string.uuid(),// Add unique identifier\n    time: faker.date.recent(),\n    from: {\n        name: faker.person.suffix(),\n        address: faker.finance.ethereumAddress(),\n        avatar: faker.image.avatar(),\n    },\n    to: {\n        name: faker.person.suffix(),\n        address: faker.finance.ethereumAddress(),\n        avatar: faker.image.avatar(),\n    },\n    value: faker.finance.amount({\n        symbol: \"ETH\",\n    }),\n    token: {\n        name: faker.finance.currencyName(),\n        symbol: faker.finance.currencySymbol(),\n        address: faker.finance.ethereumAddress(),\n        icon: faker.image.url(),\n    },\n    tags: [Math.random() > 0.5 ? TransactionTagType.Buy : TransactionTagType.Sell],\n} satisfies Transaction));\n\nexport const mockProjectDex = {\n    categories: [\n        {\n            id: \"1\",\n            name: \"Market Cap (30d)\",\n            metrics: [\n                {\n                    id: \"1\",\n                    name: \"Total Value Locked\",\n                    value: faker.finance.amount(),\n                    unit: \"ETH\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Daily Active Users\",\n                    value: faker.number.float(),\n                    unit: \"Users\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Transaction Volume\",\n                    value: faker.finance.amount(),\n                    unit: \"ETH\",\n                },\n                {\n                    id: \"4\",\n                    name: \"New Wallets Created\",\n                    value: faker.number.float(),\n                    unit: \"Wallets\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Exchange Volume\",\n                    value: faker.finance.amount(),\n                    unit: \"ETH\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Total Market Cap\",\n                    value: faker.finance.amount(),\n                    unit: \"ETH\",\n                },\n            ] satisfies KeyMetric[]\n        },\n        {\n            id: \"2\",\n            name: \"User Engagement\",\n            metrics: [\n                {\n                    id: \"1\",\n                    name: \"Daily Active Users\",\n                    value: faker.number.int({ min: 0, max: 100 }),\n                    unit: \"Users\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Monthly Active Users\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"Users\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Average Session Duration\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"Minutes\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Bounce Rate\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"%\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Session per User\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"Sessions\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Retention Rate\",\n                    value: faker.number.float({ min: 0, max: 100 }),\n                    unit: \"%\",\n                }\n            ] satisfies KeyMetric[]\n        },\n        {\n            id: \"3\",\n            name: \"Financial Metrics\",\n            metrics: [\n                {\n                    id: \"1\",\n                    name: \"Revenue\",\n                    value: faker.finance.amount(),\n                    unit: \"USD\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Profit\",\n                    value: faker.finance.amount(),\n                    unit: \"USD\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Expenses\",\n                    value: faker.finance.amount(),\n                    unit: \"USD\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Net Income\",\n                    value: faker.finance.amount(),\n                    unit: \"USD\",\n                },\n            ] satisfies KeyMetric[]\n        }\n    ] satisfies MetricCategory[]\n}\n\nexport const mockProfiler = {\n    name: faker.person.fullName(),\n    address: faker.finance.ethereumAddress(),\n    avatar: faker.image.avatar(),\n    tag: Math.random() > 0.2 ? ProfilerTagType.Whale : (Math.random() > 0.2 ? ProfilerTagType.Fund : ProfilerTagType.Anonymous),\n    portifolio: Array.from({ length: 28}, () => ({\n        name: faker.finance.currencyName(),\n        symbol: faker.finance.currencySymbol(),\n        address: faker.finance.ethereumAddress(),\n        icon: faker.image.url(),\n    })),\n} satisfies Profiler;"],"names":[],"mappings":";;;;;;;;;;;;AAGO,MAAM,cAAc;IACvB,MAAM,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,IAAI;IACxB,SAAS,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,eAAe;IACtC,YAAY,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM,CAAC;QAC7B,QAAQ;QACR,YAAY;IAChB;IACA,QAAQ,uNAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM;IAC1B,KAAK,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM,CAAC;QACtB,QAAQ;IACZ;AACJ;AAEO,MAAM,2BAA2B,MAAM,IAAI,CAAC;IAAE,QAAQ;AAAG,GAAG,IAAM,CAAC;QACtE,IAAI,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,IAAI;QACrB,MAAM,uNAAA,CAAA,QAAK,CAAC,IAAI,CAAC,MAAM;QACvB,MAAM;YACF,MAAM,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,MAAM;YACzB,SAAS,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,eAAe;YACtC,QAAQ,uNAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM;QAC9B;QACA,IAAI;YACA,MAAM,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,MAAM;YACzB,SAAS,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,eAAe;YACtC,QAAQ,uNAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM;QAC9B;QACA,OAAO,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM,CAAC;YACxB,QAAQ;QACZ;QACA,OAAO;YACH,MAAM,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,YAAY;YAChC,QAAQ,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,cAAc;YACpC,SAAS,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,eAAe;YACtC,MAAM,uNAAA,CAAA,QAAK,CAAC,KAAK,CAAC,GAAG;QACzB;QACA,MAAM;YAAC,KAAK,MAAM,KAAK,MAAM,4HAAA,CAAA,qBAAkB,CAAC,GAAG,GAAG,4HAAA,CAAA,qBAAkB,CAAC,IAAI;SAAC;IAClF,CAAuB;AAEhB,MAAM,iBAAiB;IAC1B,YAAY;QACR;YACI,IAAI;YACJ,MAAM;YACN,SAAS;gBACL;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM;oBAC3B,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,KAAK;oBACzB,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM;oBAC3B,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,KAAK;oBACzB,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM;oBAC3B,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM;oBAC3B,MAAM;gBACV;aACH;QACL;QACA;YACI,IAAI;YACJ,MAAM;YACN,SAAS;gBACL;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,GAAG,CAAC;wBAAE,KAAK;wBAAG,KAAK;oBAAI;oBAC3C,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,KAAK,CAAC;wBAAE,KAAK;wBAAG,KAAK;oBAAI;oBAC7C,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,KAAK,CAAC;wBAAE,KAAK;wBAAG,KAAK;oBAAI;oBAC7C,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,KAAK,CAAC;wBAAE,KAAK;wBAAG,KAAK;oBAAI;oBAC7C,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,KAAK,CAAC;wBAAE,KAAK;wBAAG,KAAK;oBAAI;oBAC7C,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,KAAK,CAAC;wBAAE,KAAK;wBAAG,KAAK;oBAAI;oBAC7C,MAAM;gBACV;aACH;QACL;QACA;YACI,IAAI;YACJ,MAAM;YACN,SAAS;gBACL;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM;oBAC3B,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM;oBAC3B,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM;oBAC3B,MAAM;gBACV;gBACA;oBACI,IAAI;oBACJ,MAAM;oBACN,OAAO,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,MAAM;oBAC3B,MAAM;gBACV;aACH;QACL;KACH;AACL;AAEO,MAAM,eAAe;IACxB,MAAM,uNAAA,CAAA,QAAK,CAAC,MAAM,CAAC,QAAQ;IAC3B,SAAS,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,eAAe;IACtC,QAAQ,uNAAA,CAAA,QAAK,CAAC,KAAK,CAAC,MAAM;IAC1B,KAAK,KAAK,MAAM,KAAK,MAAM,4HAAA,CAAA,kBAAe,CAAC,KAAK,GAAI,KAAK,MAAM,KAAK,MAAM,4HAAA,CAAA,kBAAe,CAAC,IAAI,GAAG,4HAAA,CAAA,kBAAe,CAAC,SAAS;IAC1H,YAAY,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAE,GAAG,IAAM,CAAC;YACzC,MAAM,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,YAAY;YAChC,QAAQ,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,cAAc;YACpC,SAAS,uNAAA,CAAA,QAAK,CAAC,OAAO,CAAC,eAAe;YACtC,MAAM,uNAAA,CAAA,QAAK,CAAC,KAAK,CAAC,GAAG;QACzB,CAAC;AACL"}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 540, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/unexpected/app/(dashboard)/(profier)/profiers/[id]/components/PortfolioArea/PortfolioTable.tsx"],"sourcesContent":["'use client';\n\nimport React from \"react\";\nimport { Table, TableHeader, TableColumn, TableBody, TableRow, TableCell, Pagination, Spinner, getKeyValue, Tab, Chip, Avatar } from \"@nextui-org/react\";\nimport { useInfiniteScroll } from \"@nextui-org/use-infinite-scroll\";\nimport { useAsyncList } from \"@react-stately/data\";\n\nimport { columns } from \"./data\";\nimport { Profiler, Token, Transaction, TransactionTagType } from \"@/types\";\nimport { mockProjectsTransactions } from \"@/mock\";\nimport { useProfiler } from \"../../context\";\n\nexport default function TransactionsTable() {\n    const profiler= useProfiler();\n    \n    const [isLoading, setIsLoading] = React.useState(false);\n    const [hasMore, setHasMore] = React.useState(false);\n\n    let list = useAsyncList<Transaction>({\n        async load({ signal, cursor }) {\n            if (cursor) {\n                setIsLoading(false);\n            }\n\n            return {\n                items: profiler.portifolio,\n            };\n        },\n    });\n\n    const [loaderRef, scrollerRef] = useInfiniteScroll({ hasMore, onLoadMore: list.loadMore });\n\n    const renderCell = React.useCallback((item: Token, columnKey: React.Key) => {\n        const cellValue = getKeyValue(item, columnKey.toString());\n\n        switch (columnKey) {\n            case \"asset\":\n                const convertedToken = cellValue as Token;\n\n                return (\n                    <Chip\n                        variant=\"light\"\n                        size=\"lg\"\n                        startContent={\n                            <Avatar\n                                src={convertedToken.icon}\n                                alt={convertedToken.name}\n                                color=\"primary\"\n                                size=\"sm\"\n                                className=\"w-4 h-4\"\n                                radius=\"full\"\n                                showFallback\n                            />\n                        }\n                    >\n                        {convertedToken.symbol}\n                    </Chip>\n                )\n            case \"price\":\n                const convertedPrice = cellValue as number;\n                \n                return (\n                    <p className=\"w-full overflow-clip\">{cellValue.toString()}</p>\n                )\n            case \"holding\":\n                return (\n                    <p className=\"w-full overflow-clip\">{cellValue.toString()}</p>\n                )\n            case \"value\":\n                return (\n                    <p className=\"w-full overflow-clip\">{cellValue.toString()}</p>\n                )\n            default:\n                return <p className=\"w-full overflow-clip\">{cellValue.toString()}</p>;\n        }\n    }, []);\n\n    return (\n        <Table\n            isHeaderSticky\n            aria-label=\"Example table with infinite pagination\"\n            baseRef={scrollerRef}\n            fullWidth\n            bottomContent={\n                hasMore ? (\n                    <div className=\"flex w-full justify-center\">\n                        <Spinner ref={loaderRef} color=\"primary\" />\n                    </div>\n                ) : null\n            }\n            classNames={{\n                base: \"max-h-[520px] overflow-scroll bg-transparent\",\n                table: \"min-h-[400px]\",\n                wrapper: \"w-full bg-foreground-50\",\n            }}\n        >\n            <TableHeader columns={columns}>\n                {(column) => (\n                    <TableColumn\n                        key={column.uid}\n                        allowsSorting={column.sortable}\n                    >\n                        {column.name}\n                    </TableColumn>\n                )}\n            </TableHeader>\n            <TableBody\n                isLoading={isLoading}\n                items={list.items}\n                loadingContent={<Spinner color=\"white\" />}\n                emptyContent=\"No data found\"\n            >\n                {(item: Transaction) => (\n                    <TableRow key={item.id} className=\"w-full\">\n                        {(columnKey) =>\n                            <TableCell>\n                                {renderCell(item, columnKey)}\n                            </TableCell>}\n                    </TableRow>\n                )}\n            </TableBody>\n        </Table>\n    );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;AAYe,SAAS;IACpB,MAAM,WAAU,CAAA,GAAA,mLAAA,CAAA,cAAW,AAAD;IAE1B,MAAM,CAAC,WAAW,aAAa,GAAG,6NAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IACjD,MAAM,CAAC,SAAS,WAAW,GAAG,6NAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAE7C,IAAI,OAAO,CAAA,GAAA,iLAAA,CAAA,eAAY,AAAD,EAAe;QACjC,MAAM,MAAK,EAAE,MAAM,EAAE,MAAM,EAAE;YACzB,IAAI,QAAQ;gBACR,aAAa;YACjB;YAEA,OAAO;gBACH,OAAO,SAAS,UAAU;YAC9B;QACJ;IACJ;IAEA,MAAM,CAAC,WAAW,YAAY,GAAG,CAAA,GAAA,4LAAA,CAAA,oBAAiB,AAAD,EAAE;QAAE;QAAS,YAAY,KAAK,QAAQ;IAAC;IAExF,MAAM,aAAa,6NAAA,CAAA,UAAK,CAAC,WAAW,CAAC,CAAC,MAAa;QAC/C,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE,MAAM,UAAU,QAAQ;QAEtD,OAAQ;YACJ,KAAK;gBACD,MAAM,iBAAiB;gBAEvB,qBACI,sQAAC,2NAAA,CAAA,OAAI;oBACD,SAAQ;oBACR,MAAK;oBACL,4BACI,sQAAC,iOAAA,CAAA,SAAM;wBACH,KAAK,eAAe,IAAI;wBACxB,KAAK,eAAe,IAAI;wBACxB,OAAM;wBACN,MAAK;wBACL,WAAU;wBACV,QAAO;wBACP,YAAY;;;;;;8BAInB,eAAe,MAAM;;;;;;YAGlC,KAAK;gBACD,MAAM,iBAAiB;gBAEvB,qBACI,sQAAC;oBAAE,WAAU;8BAAwB,UAAU,QAAQ;;;;;;YAE/D,KAAK;gBACD,qBACI,sQAAC;oBAAE,WAAU;8BAAwB,UAAU,QAAQ;;;;;;YAE/D,KAAK;gBACD,qBACI,sQAAC;oBAAE,WAAU;8BAAwB,UAAU,QAAQ;;;;;;YAE/D;gBACI,qBAAO,sQAAC;oBAAE,WAAU;8BAAwB,UAAU,QAAQ;;;;;;QACtE;IACJ,GAAG,EAAE;IAEL,qBACI,sQAAC,8NAAA,CAAA,QAAK;QACF,cAAc;QACd,cAAW;QACX,SAAS;QACT,SAAS;QACT,eACI,wBACI,sQAAC;YAAI,WAAU;sBACX,cAAA,sQAAC,oOAAA,CAAA,UAAO;gBAAC,KAAK;gBAAW,OAAM;;;;;;;;;;qBAEnC;QAER,YAAY;YACR,MAAM;YACN,OAAO;YACP,SAAS;QACb;;0BAEA,sQAAC,2OAAA,CAAA,cAAW;gBAAC,SAAS,8MAAA,CAAA,UAAO;0BACxB,CAAC,uBACE,sQAAC,2OAAA,CAAA,cAAW;wBAER,eAAe,OAAO,QAAQ;kCAE7B,OAAO,IAAI;uBAHP,OAAO,GAAG;;;;;;;;;;0BAO3B,sQAAC,uOAAA,CAAA,YAAS;gBACN,WAAW;gBACX,OAAO,KAAK,KAAK;gBACjB,8BAAgB,sQAAC,oOAAA,CAAA,UAAO;oBAAC,OAAM;;;;;;gBAC/B,cAAa;0BAEZ,CAAC,qBACE,sQAAC,qOAAA,CAAA,WAAQ;wBAAe,WAAU;kCAC7B,CAAC,0BACE,sQAAC,uOAAA,CAAA,YAAS;0CACL,WAAW,MAAM;;;;;;uBAHf,KAAK,EAAE;;;;;;;;;;;;;;;;AAU1C"}},
    {"offset": {"line": 730, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}