module.exports = {

"[project]/unexpected/node_modules/@identity-connect/crypto/dist/index.mjs [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

// src/encrDecr.ts
__turbopack_esm__({
    "AccountConnectionAction": ()=>AccountConnectionAction,
    "DecryptionError": ()=>DecryptionError,
    "EncryptionEnvelopeError": ()=>EncryptionEnvelopeError,
    "EnvelopeMessageMismatchError": ()=>EnvelopeMessageMismatchError,
    "KeyTypes": ()=>KeyTypes,
    "REQUIRED_FIELDS": ()=>REQUIRED_FIELDS,
    "SIGNATURE_PREFIX": ()=>SIGNATURE_PREFIX,
    "aptosAccountToEd25519Keypair": ()=>aptosAccountToEd25519Keypair,
    "aptosAccountToSerializedInfo": ()=>aptosAccountToSerializedInfo,
    "concatUint8array": ()=>concatUint8array,
    "constructMetadata": ()=>constructMetadata,
    "convertEd25519PublicKeyToX25519PublicKey": ()=>convertEd25519PublicKeyToX25519PublicKey,
    "convertEd25519SecretKeyToX25519SecretKey": ()=>convertEd25519SecretKeyToX25519SecretKey,
    "createEd25519KeyPair": ()=>createEd25519KeyPair,
    "createSerializedAccountInfo": ()=>createSerializedAccountInfo,
    "createX25519KeyPair": ()=>createX25519KeyPair,
    "dangerouslyEncryptAndSignEnvelopeUnvalidated": ()=>dangerouslyEncryptAndSignEnvelopeUnvalidated,
    "decodeBase64": ()=>decodeBase64,
    "decryptEnvelope": ()=>decryptEnvelope,
    "decryptMessage": ()=>decryptMessage,
    "decryptMessageDirect": ()=>decryptMessageDirect,
    "decryptObject": ()=>decryptObject,
    "decryptObjectDirect": ()=>decryptObjectDirect,
    "decryptSerializedEncryptionResult": ()=>decryptSerializedEncryptionResult,
    "decryptSerializedEncryptionResultDirect": ()=>decryptSerializedEncryptionResultDirect,
    "deriveAccountTransportEd25519Keypair": ()=>deriveAccountTransportEd25519Keypair,
    "deserializeEd25519PublicKeyB64": ()=>deserializeEd25519PublicKeyB64,
    "deserializeEd25519SignatureB64": ()=>deserializeEd25519SignatureB64,
    "deserializeEncryptionResult": ()=>deserializeEncryptionResult,
    "deserializePublicKeyB64": ()=>deserializePublicKeyB64,
    "deserializeSignatureB64": ()=>deserializeSignatureB64,
    "deserializeTransportEnvelope": ()=>deserializeTransportEnvelope,
    "ed25519KeypairFromSecret": ()=>ed25519KeypairFromSecret,
    "encodeBase64": ()=>encodeBase64,
    "encryptAndSignEnvelope": ()=>encryptAndSignEnvelope,
    "encryptMessage": ()=>encryptMessage,
    "encryptMessageDirect": ()=>encryptMessageDirect,
    "encryptObject": ()=>encryptObject,
    "encryptObjectDirect": ()=>encryptObjectDirect,
    "ensureMetadataFields": ()=>ensureMetadataFields,
    "ensurePrivatePublicFieldsDisjoint": ()=>ensurePrivatePublicFieldsDisjoint,
    "hashAndVerifySignature": ()=>hashAndVerifySignature,
    "keypairToEd25519": ()=>keypairToEd25519,
    "keypairToX25519": ()=>keypairToX25519,
    "makeEd25519SecretKeySignCallbackNoDomainSeparation": ()=>makeEd25519SecretKeySignCallbackNoDomainSeparation,
    "messageHash": ()=>messageHash,
    "publicKeyB64FromEd25519PublicKeyB64": ()=>publicKeyB64FromEd25519PublicKeyB64,
    "serializeEncryptionResult": ()=>serializeEncryptionResult,
    "serializePublicKeyB64": ()=>serializePublicKeyB64,
    "serializeSignatureB64": ()=>serializeSignatureB64,
    "signWithEd25519SecretKey": ()=>signWithEd25519SecretKey,
    "toKey": ()=>toKey,
    "verifyEnvelopeSignature": ()=>verifyEnvelopeSignature,
    "verifySignature": ()=>verifySignature
});
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__c__as__Ed25519Signature$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-A2Z7I2EY.mjs [app-ssr] (ecmascript) <export c as Ed25519Signature>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/@noble/hashes/esm/sha3.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/tweetnacl/nacl-fast.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$ed2curve$2f$ed2curve$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/ed2curve/ed2curve.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Ed25519PublicKey$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-A2Z7I2EY.mjs [app-ssr] (ecmascript) <export a as Ed25519PublicKey>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-BCUSI3N6.mjs [app-ssr] (ecmascript) <export b as Hex>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-connect/wallet-api/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$DZXM2MQY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Deserializer$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-DZXM2MQY.mjs [app-ssr] (ecmascript) <export a as Deserializer>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A63SMUOU$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Serializer$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-A63SMUOU.mjs [app-ssr] (ecmascript) <export b as Serializer>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$76OH2Z4Q$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__PublicKey$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-76OH2Z4Q.mjs [app-ssr] (ecmascript) <export a as PublicKey>");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
// src/errors.ts
var EncryptionEnvelopeError = class extends Error {
};
var EnvelopeMessageMismatchError = class _EnvelopeMessageMismatchError extends EncryptionEnvelopeError {
    constructor(message, field){
        super(message);
        this.field = field;
        this.name = "EnvelopeMessageMismatchError";
        Object.setPrototypeOf(this, _EnvelopeMessageMismatchError.prototype);
    }
};
var DecryptionError = class _DecryptionError extends EncryptionEnvelopeError {
    constructor(message){
        super(message);
        this.name = "DecryptionError";
        Object.setPrototypeOf(this, _DecryptionError.prototype);
    }
};
;
var KeyTypes = /* @__PURE__ */ ((KeyTypes2)=>{
    KeyTypes2["Ed25519PublicKey"] = "Ed25519PublicKey";
    KeyTypes2["Ed25519SecretKey"] = "Ed25519SecretKey";
    KeyTypes2["X25519PublicKey"] = "X25519PublicKey";
    KeyTypes2["X25519SecretKey"] = "X25519SecretKey";
    return KeyTypes2;
})(KeyTypes || {});
function createX25519KeyPair() {
    return keypairToX25519(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].box.keyPair());
}
function createEd25519KeyPair() {
    return keypairToEd25519(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].sign.keyPair());
}
function toKey(rawKey, type) {
    return {
        key: rawKey,
        type
    };
}
function keypairToEd25519(keyPair) {
    return {
        publicKey: toKey(keyPair.publicKey, "Ed25519PublicKey" /* Ed25519PublicKey */ ),
        secretKey: toKey(keyPair.secretKey, "Ed25519SecretKey" /* Ed25519SecretKey */ )
    };
}
function keypairToX25519(keyPair) {
    return {
        publicKey: toKey(keyPair.publicKey, "X25519PublicKey" /* X25519PublicKey */ ),
        secretKey: toKey(keyPair.secretKey, "X25519SecretKey" /* X25519SecretKey */ )
    };
}
function aptosAccountToEd25519Keypair(account) {
    return ed25519KeypairFromSecret(account.signingKey.secretKey);
}
function ed25519KeypairFromSecret(ed25519SecretKeyBytes) {
    return keypairToEd25519(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].sign.keyPair.fromSeed(ed25519SecretKeyBytes.slice(0, 32)));
}
function decodeBase64(base64Str) {
    if (globalThis.Buffer) {
        return new Uint8Array(Buffer.from(base64Str, "base64"));
    }
    return Uint8Array.from(atob(base64Str), (m)=>m.codePointAt(0));
}
function encodeBase64(bytes) {
    if (globalThis.Buffer) {
        return Buffer.from(bytes).toString("base64");
    }
    return btoa(Array.from(bytes, (x)=>String.fromCodePoint(x)).join(""));
}
function concatUint8array(arrayOne, arrayTwo) {
    const mergedArray = new Uint8Array(arrayOne.length + arrayTwo.length);
    mergedArray.set(arrayOne);
    mergedArray.set(arrayTwo, arrayOne.length);
    return mergedArray;
}
// src/encrDecr.ts
var SIGNATURE_PREFIX = "APTOS::IDENTITY_CONNECT";
function convertEd25519PublicKeyToX25519PublicKey(ed25519PublicKey, errorKeyName) {
    const x25519PublicKey = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$ed2curve$2f$ed2curve$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].convertPublicKey(ed25519PublicKey.key.slice(0, 32));
    if (!x25519PublicKey) throw new Error(`${errorKeyName} is not a valid Ed25519 public key`);
    return toKey(x25519PublicKey, "X25519PublicKey" /* X25519PublicKey */ );
}
function convertEd25519SecretKeyToX25519SecretKey(ed25519SecretKey) {
    const x25519SecretKey = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$ed2curve$2f$ed2curve$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].convertSecretKey(ed25519SecretKey.key.slice(0, 32));
    return toKey(x25519SecretKey, "X25519SecretKey" /* X25519SecretKey */ );
}
function serializeEncryptionResult(enc) {
    return {
        nonceB64: encodeBase64(enc.nonce),
        securedB64: encodeBase64(enc.secured)
    };
}
function deserializeEncryptionResult(enc) {
    return {
        nonce: decodeBase64(enc.nonceB64),
        secured: decodeBase64(enc.securedB64)
    };
}
function decryptSerializedEncryptionResult(senderX25519PublicKey, receiverEd25519SecretKey, enc) {
    const des = deserializeEncryptionResult(enc);
    return decryptObject(senderX25519PublicKey, receiverEd25519SecretKey, des.secured, des.nonce);
}
function decryptSerializedEncryptionResultDirect(senderX25519PublicKey, receiverX25519SecretKey, enc) {
    const des = deserializeEncryptionResult(enc);
    return decryptObjectDirect(senderX25519PublicKey, receiverX25519SecretKey, des.secured, des.nonce);
}
function encryptMessage(senderX25519SecretKey, receiverEd25519PublicKey, message) {
    const receiverX25519PublicKey = convertEd25519PublicKeyToX25519PublicKey(receiverEd25519PublicKey, "receiver public key");
    return encryptMessageDirect(senderX25519SecretKey, receiverX25519PublicKey, message);
}
function encryptMessageDirect(senderX25519SecretKey, receiverX25519PublicKey, message) {
    const nonce = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].randomBytes(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].box.nonceLength);
    const messageUint8 = new TextEncoder().encode(message);
    const secured = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].box(messageUint8, nonce, receiverX25519PublicKey.key, senderX25519SecretKey.key.slice(0, 32));
    return {
        nonce,
        secured
    };
}
function encryptObject(senderX25519SecretKey, receiverEd25519PublicKey, message) {
    const receiverX25519PublicKey = convertEd25519PublicKeyToX25519PublicKey(receiverEd25519PublicKey, "receiver public key");
    return encryptObjectDirect(senderX25519SecretKey, receiverX25519PublicKey, message);
}
function encryptObjectDirect(senderX25519SecretKey, receiverX25519PublicKey, message) {
    return encryptMessageDirect(senderX25519SecretKey, receiverX25519PublicKey, JSON.stringify(message));
}
function decryptMessage(senderX25519PublicKey, receiverEd25519SecretKey, securedMessage, nonce) {
    const receiverX25519SecretKey = convertEd25519SecretKeyToX25519SecretKey(receiverEd25519SecretKey);
    return decryptMessageDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce);
}
function decryptMessageDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce) {
    let decryptedUint8;
    try {
        decryptedUint8 = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].box.open(securedMessage, nonce, senderX25519PublicKey.key.slice(0, 32), receiverX25519SecretKey.key.slice(0, 32));
    } catch (e) {
        throw new DecryptionError(`Could not decrypt message: ${e.message}`);
    }
    if (!decryptedUint8) throw new DecryptionError("Could not decrypt message");
    return new TextDecoder().decode(decryptedUint8);
}
function decryptObject(senderX25519PublicKey, receiverEd25519SecretKey, securedMessage, nonce) {
    const receiverX25519SecretKey = convertEd25519SecretKeyToX25519SecretKey(receiverEd25519SecretKey);
    return decryptObjectDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce);
}
function decryptObjectDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce) {
    const decryptedStr = decryptMessageDirect(senderX25519PublicKey, receiverX25519SecretKey, securedMessage, nonce);
    return JSON.parse(decryptedStr);
}
function messageHash(message, purpose) {
    const signaturePrefixHash = new Uint8Array((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sha3_256"])(`${SIGNATURE_PREFIX}::${purpose}::`));
    return new Uint8Array((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sha3_256"])(concatUint8array(signaturePrefixHash, message)));
}
function signWithEd25519SecretKey(message, signingEd25519SecretKey, purpose) {
    return __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].sign.detached(messageHash(message, purpose), signingEd25519SecretKey.key);
}
function makeEd25519SecretKeySignCallbackNoDomainSeparation(signingEd25519SecretKey) {
    return async (message)=>new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__c__as__Ed25519Signature$3e$__["Ed25519Signature"](__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$tweetnacl$2f$nacl$2d$fast$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].sign.detached(message, signingEd25519SecretKey.key));
}
function verifySignature(message, signature, signingPublicKey, purpose) {
    return signingPublicKey.verifySignature({
        message: messageHash(message, purpose),
        signature
    });
}
function hashAndVerifySignature(message, signature, signingPublicKey, purpose) {
    const messageUint8 = message instanceof Uint8Array ? message : new TextEncoder().encode(message);
    const messageUint8Hash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sha3_256"])(messageUint8);
    return verifySignature(messageUint8Hash, signature, signingPublicKey, purpose);
}
;
;
var REQUIRED_FIELDS = [
    "receiverEd25519PublicKeyB64",
    "senderEd25519PublicKeyB64",
    "senderX25519PublicKeyB64",
    "sequence",
    "timestampMillis"
].sort();
function ensurePrivatePublicFieldsDisjoint(privateMessage, publicMessage) {
    const intersection = Object.keys(privateMessage).filter((x)=>Object.keys(publicMessage).includes(x));
    if (intersection.length > 0) {
        const field = intersection[0];
        throw new EnvelopeMessageMismatchError(`Field ${field} appears in both private and public message fields`, field);
    }
}
function ensureMetadataFields(message) {
    const messageKeys = Object.keys(message).sort();
    const extraFields = messageKeys.filter((key)=>!REQUIRED_FIELDS.includes(key));
    const missingFields = REQUIRED_FIELDS.filter((key)=>!messageKeys.includes(key));
    if (extraFields.length > 0 || missingFields.length > 0) {
        let extraFieldsStr = extraFields.length > 0 ? `extra(${extraFields.join(", ")})` : "";
        const missingFieldsStr = missingFields.length > 0 ? `missing(${missingFields.join(", ")})` : "";
        extraFieldsStr = extraFieldsStr.length > 0 && missingFieldsStr.length > 0 ? `${extraFieldsStr}, ` : extraFieldsStr;
        throw new EnvelopeMessageMismatchError(`PublicMessage metadata fields do not conform to spec: ${extraFieldsStr}${missingFieldsStr}`, "_metadata");
    }
}
function deserializeTransportEnvelope(transportEnvelope) {
    const publicMessage = JSON.parse(transportEnvelope.serializedPublicMessage);
    return {
        ...transportEnvelope,
        publicMessage
    };
}
function encryptAndSignEnvelope(senderEd25519SecretKey, senderEd25519PublicKey, receiverEd25519PublicKey, sequence, publicMessage, privateMessage) {
    const senderEphemeralX25519KeyPair = createX25519KeyPair();
    const metadata = constructMetadata(senderEd25519PublicKey, receiverEd25519PublicKey, sequence, senderEphemeralX25519KeyPair.publicKey);
    ensureMetadataFields(metadata);
    ensurePrivatePublicFieldsDisjoint(privateMessage, publicMessage);
    return dangerouslyEncryptAndSignEnvelopeUnvalidated(senderEd25519SecretKey, receiverEd25519PublicKey, metadata, privateMessage, publicMessage, senderEphemeralX25519KeyPair);
}
function constructMetadata(senderEd25519PublicKey, receiverEd25519PublicKey, sequence, senderEphemeralX25519PublicKey) {
    return {
        receiverEd25519PublicKeyB64: encodeBase64(receiverEd25519PublicKey.key),
        senderEd25519PublicKeyB64: encodeBase64(senderEd25519PublicKey.key),
        senderX25519PublicKeyB64: encodeBase64(senderEphemeralX25519PublicKey.key),
        sequence,
        timestampMillis: Date.now()
    };
}
function dangerouslyEncryptAndSignEnvelopeUnvalidated(senderEd25519SecretKey, receiverEd25519PublicKey, metadata, privateMessage, publicMessage, senderEphemeralX25519KeyPair) {
    const encryptionResult = encryptObject(senderEphemeralX25519KeyPair.secretKey, receiverEd25519PublicKey, privateMessage);
    const encryptedPrivateMessage = serializeEncryptionResult(encryptionResult);
    const encryptedPrivateMessageBytes = decodeBase64(encryptedPrivateMessage.securedB64);
    const serializedPublicMessage = JSON.stringify({
        ...publicMessage,
        _metadata: metadata
    });
    const publicMessageBytes = new TextEncoder().encode(serializedPublicMessage);
    const messageSignature = signEnvelope(publicMessageBytes, encryptedPrivateMessageBytes, senderEd25519SecretKey);
    return {
        encryptedPrivateMessage,
        messageSignature,
        serializedPublicMessage
    };
}
function combineHashedEnvelopeMessageBytes(publicMessageBytes, privateMessageBytes) {
    const publicMessageBytesHash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sha3_256"])(publicMessageBytes);
    const privateMessageBytesHash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sha3_256"])(privateMessageBytes);
    const combinedHash = new Uint8Array(publicMessageBytesHash.length + privateMessageBytesHash.length);
    combinedHash.set(publicMessageBytesHash);
    combinedHash.set(privateMessageBytesHash, publicMessageBytesHash.length);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sha3_256"])(combinedHash);
}
function signEnvelope(publicMessageBytes, privateMessageBytes, senderEd25519SecretKey) {
    const messageHashBytes = combineHashedEnvelopeMessageBytes(publicMessageBytes, privateMessageBytes);
    const signatureBytes = signWithEd25519SecretKey(messageHashBytes, senderEd25519SecretKey, "SECURED_ENVELOPE");
    return __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__["Hex"].fromHexInput(signatureBytes).toString();
}
function verifyEnvelopeSignature(publicMessageBytes, privateMessageBytes, messageSignatureInput, senderEd25519PublicKey) {
    const messageSignature = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__c__as__Ed25519Signature$3e$__["Ed25519Signature"](__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__["Hex"].fromHexInput(messageSignatureInput).toUint8Array());
    const senderPublicKey = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Ed25519PublicKey$3e$__["Ed25519PublicKey"](senderEd25519PublicKey.key);
    const messageHashBytes = combineHashedEnvelopeMessageBytes(publicMessageBytes, privateMessageBytes);
    const messageVerified = verifySignature(messageHashBytes, messageSignature, senderPublicKey, "SECURED_ENVELOPE");
    if (!messageVerified) {
        throw new EnvelopeMessageMismatchError("Could not verify SecuredEnvelope signature", "messageSignature");
    }
}
function decryptEnvelope(senderEd25519PublicKey, receiverEd25519SecretKey, message) {
    const { encryptedPrivateMessage, messageSignature, serializedPublicMessage } = message;
    const publicMessage = JSON.parse(serializedPublicMessage);
    const rawPrivateMessage = decodeBase64(encryptedPrivateMessage.securedB64);
    const rawPublicMessage = new TextEncoder().encode(serializedPublicMessage);
    verifyEnvelopeSignature(rawPublicMessage, rawPrivateMessage, messageSignature, senderEd25519PublicKey);
    const senderEd25519PublicKeyB64 = encodeBase64(senderEd25519PublicKey.key);
    const expectedPublicKeyB64 = publicMessage._metadata.senderEd25519PublicKeyB64;
    if (senderEd25519PublicKeyB64 !== expectedPublicKeyB64) {
        throw new EnvelopeMessageMismatchError("senderEd25519PublicKey in envelope does not match provided receiverEd25519SecretKey", "senderPublicKey");
    }
    const senderX25519PublicKeyBytes = decodeBase64(publicMessage._metadata.senderX25519PublicKeyB64);
    const senderX25519PublicKey = toKey(senderX25519PublicKeyBytes, "X25519PublicKey" /* X25519PublicKey */ );
    const encryptionResult = deserializeEncryptionResult(encryptedPrivateMessage);
    const privateMessage = decryptObject(senderX25519PublicKey, receiverEd25519SecretKey, encryptionResult.secured, encryptionResult.nonce);
    ensureMetadataFields(publicMessage._metadata);
    ensurePrivatePublicFieldsDisjoint(privateMessage, publicMessage);
    return {
        messageSignature,
        privateMessage,
        publicMessage
    };
}
;
;
function serializePublicKeyB64(publicKey) {
    const serializer = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A63SMUOU$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Serializer$3e$__["Serializer"]();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["serializePublicKey"])(serializer, publicKey);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bytesToBase64"])(serializer.toUint8Array());
}
function deserializePublicKeyB64(publicKeyB64) {
    const serializedPublicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["base64ToBytes"])(publicKeyB64);
    const deserializer = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$DZXM2MQY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Deserializer$3e$__["Deserializer"](serializedPublicKey);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["deserializePublicKey"])(deserializer);
}
function deserializeEd25519PublicKeyB64(ed25519PublicKeyB64) {
    return new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Ed25519PublicKey$3e$__["Ed25519PublicKey"](decodeBase64(ed25519PublicKeyB64));
}
function serializeSignatureB64(signature) {
    const serializer = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A63SMUOU$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Serializer$3e$__["Serializer"]();
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["serializeSignature"])(serializer, signature);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["bytesToBase64"])(serializer.toUint8Array());
}
function deserializeSignatureB64(signatureB64) {
    const serializedSignature = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["base64ToBytes"])(signatureB64);
    const deserializer = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$DZXM2MQY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Deserializer$3e$__["Deserializer"](serializedSignature);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["deserializeSignature"])(deserializer);
}
function deserializeEd25519SignatureB64(ed25519SignatureB64) {
    const signatureBytes = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__["Hex"].fromHexInput(ed25519SignatureB64).toUint8Array();
    return new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__c__as__Ed25519Signature$3e$__["Ed25519Signature"](signatureBytes);
}
function publicKeyB64FromEd25519PublicKeyB64(ed25519PublicKeyB64) {
    const publicKey = deserializeEd25519PublicKeyB64(ed25519PublicKeyB64);
    return serializePublicKeyB64(publicKey);
}
;
;
var AccountConnectionAction = /* @__PURE__ */ ((AccountConnectionAction2)=>{
    AccountConnectionAction2["ADD"] = "add";
    AccountConnectionAction2["REMOVE"] = "remove";
    return AccountConnectionAction2;
})(AccountConnectionAction || {});
function deriveAccountTransportEd25519Keypair(ed25519SecretKeyOrSignCallback, publicKey) {
    const publicKeyBytes = publicKey instanceof __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$76OH2Z4Q$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__PublicKey$3e$__["PublicKey"] ? publicKey.toUint8Array() : publicKey.key;
    if (ed25519SecretKeyOrSignCallback instanceof Function) {
        const seedGeneratorBytes = messageHash(publicKeyBytes, "TRANSPORT_KEYPAIR");
        const signature = ed25519SecretKeyOrSignCallback(seedGeneratorBytes);
        if (signature instanceof Promise) {
            return signature.then((value)=>ed25519KeypairFromSecret(value.toUint8Array()));
        }
        return ed25519KeypairFromSecret(signature.toUint8Array());
    }
    const seedBytes = signWithEd25519SecretKey(publicKeyBytes, ed25519SecretKeyOrSignCallback, "TRANSPORT_KEYPAIR");
    return ed25519KeypairFromSecret(seedBytes);
}
function createSerializedAccountInfo(...[signCallback, publicKey, transportEd25519PublicKey, action, intentId, accountAddress]) {
    const authKey = publicKey.authKey();
    const finalAccountAddress = accountAddress || authKey.derivedAddress().toString();
    const publicKeyB64 = serializePublicKeyB64(publicKey);
    const accountInfo = {
        accountAddress: finalAccountAddress,
        action,
        intentId,
        publicKeyB64,
        timestampMillis: Date.now(),
        transportEd25519PublicKeyB64: encodeBase64(transportEd25519PublicKey.key)
    };
    const accountInfoSerialized = JSON.stringify(accountInfo);
    const accountInfoBytes = new TextEncoder().encode(accountInfoSerialized);
    const accountInfoHash = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$noble$2f$hashes$2f$esm$2f$sha3$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["sha3_256"])(accountInfoBytes);
    const signature = signCallback(messageHash(accountInfoHash, "ACCOUNT_INFO"));
    if (signature instanceof Promise) {
        return signature.then((value)=>({
                accountInfoSerialized,
                signatureB64: serializeSignatureB64(value)
            }));
    }
    return {
        accountInfoSerialized,
        signatureB64: serializeSignatureB64(signature)
    };
}
async function aptosAccountToSerializedInfo(account, intentId) {
    const signCallback = async (data)=>account.sign(data);
    const transportKey = await deriveAccountTransportEd25519Keypair(signCallback, account.publicKey);
    return createSerializedAccountInfo(signCallback, account.publicKey, transportKey.publicKey, "add" /* ADD */ , intentId);
}
;
 //# sourceMappingURL=index.mjs.map

})()),
"[project]/unexpected/node_modules/@identity-connect/api/dist/index.mjs [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

// src/constants.ts
__turbopack_esm__({
    "DEFAULT_BACKEND_URL": ()=>DEFAULT_BACKEND_URL,
    "NetworkName": ()=>NetworkName,
    "PairingStatus": ()=>PairingStatus,
    "SigningRequestStatus": ()=>SigningRequestStatus,
    "SigningRequestTypes": ()=>SigningRequestTypes,
    "WalletOSEnum": ()=>WalletOSEnum,
    "WalletPlatformEnum": ()=>WalletPlatformEnum
});
var DEFAULT_BACKEND_URL = "https://identityconnect.com";
// src/network.ts
var NetworkName = /* @__PURE__ */ ((NetworkName2)=>{
    NetworkName2["DEVNET"] = "devnet";
    NetworkName2["MAINNET"] = "mainnet";
    NetworkName2["TESTNET"] = "testnet";
    return NetworkName2;
})(NetworkName || {});
// src/types/pairing.ts
var PairingStatus = /* @__PURE__ */ ((PairingStatus2)=>{
    PairingStatus2["Finalized"] = "FINALIZED";
    PairingStatus2["Pending"] = "PENDING";
    return PairingStatus2;
})(PairingStatus || {});
// src/types/signingRequest.ts
var SigningRequestTypes = /* @__PURE__ */ ((SigningRequestTypes2)=>{
    SigningRequestTypes2["SIGN_AND_SUBMIT_TRANSACTION"] = "SIGN_AND_SUBMIT_TRANSACTION";
    SigningRequestTypes2["SIGN_MESSAGE"] = "SIGN_MESSAGE";
    SigningRequestTypes2["SIGN_TRANSACTION"] = "SIGN_TRANSACTION";
    return SigningRequestTypes2;
})(SigningRequestTypes || {});
var SigningRequestStatus = /* @__PURE__ */ ((SigningRequestStatus2)=>{
    SigningRequestStatus2["APPROVED"] = "APPROVED";
    SigningRequestStatus2["CANCELLED"] = "CANCELLED";
    SigningRequestStatus2["INVALID"] = "INVALID";
    SigningRequestStatus2["PENDING"] = "PENDING";
    SigningRequestStatus2["REJECTED"] = "REJECTED";
    return SigningRequestStatus2;
})(SigningRequestStatus || {});
// src/types/wallet.ts
var WalletOSEnum = /* @__PURE__ */ ((WalletOSEnum2)=>{
    WalletOSEnum2["Android"] = "android";
    WalletOSEnum2["IdentityConnect"] = "ic";
    WalletOSEnum2["Linux"] = "linux";
    WalletOSEnum2["Macos"] = "osx";
    WalletOSEnum2["Windows"] = "win";
    WalletOSEnum2["iOS"] = "ios";
    return WalletOSEnum2;
})(WalletOSEnum || {});
var WalletPlatformEnum = /* @__PURE__ */ ((WalletPlatformEnum2)=>{
    WalletPlatformEnum2["BraveExtension"] = "brave-extension";
    WalletPlatformEnum2["ChromeExtension"] = "chrome-extension";
    WalletPlatformEnum2["FirefoxExtension"] = "firefox-extension";
    WalletPlatformEnum2["IcDappWallet"] = "ic-dapp-wallet";
    WalletPlatformEnum2["KiwiExtension"] = "kiwi-extension";
    WalletPlatformEnum2["NativeApp"] = "native-app";
    WalletPlatformEnum2["OperaExtension"] = "opera-extension";
    WalletPlatformEnum2["SafariExtension"] = "safari-extension";
    return WalletPlatformEnum2;
})(WalletPlatformEnum || {});
;
 //# sourceMappingURL=index.mjs.map

})()),
"[project]/unexpected/node_modules/@identity-connect/wallet-api/dist/index.mjs [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

// src/serialization/bcsSerialization.ts
__turbopack_esm__({
    "bcsDeserialize": ()=>bcsDeserialize,
    "bcsSerialize": ()=>bcsSerialize,
    "deserializeJsonTransactionPayload": ()=>deserializeJsonTransactionPayload,
    "deserializeRawTransaction": ()=>deserializeRawTransaction,
    "deserializeSignAndSubmitTransactionRequestArgs": ()=>deserializeSignAndSubmitTransactionRequestArgs,
    "deserializeSignTransactionRequestArgs": ()=>deserializeSignTransactionRequestArgs,
    "deserializeSignTransactionResponseArgs": ()=>deserializeSignTransactionResponseArgs,
    "isBcsSerializable": ()=>isBcsSerializable,
    "makeFullMessage": ()=>makeFullMessage,
    "serializeJsonTransactionPayload": ()=>serializeJsonTransactionPayload,
    "serializeRawTransaction": ()=>serializeRawTransaction,
    "serializeSignAndSubmitTransactionRequestArgs": ()=>serializeSignAndSubmitTransactionRequestArgs,
    "serializeSignTransactionRequestArgs": ()=>serializeSignTransactionRequestArgs,
    "serializeSignTransactionResponseArgs": ()=>serializeSignTransactionResponseArgs
});
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$DZXM2MQY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Deserializer$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-DZXM2MQY.mjs [app-ssr] (ecmascript) <export a as Deserializer>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-BCUSI3N6.mjs [app-ssr] (ecmascript) <export b as Hex>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$aptos$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/aptos/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$JPDT6E3B$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__RawTransaction$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-JPDT6E3B.mjs [app-ssr] (ecmascript) <export a as RawTransaction>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$JPDT6E3B$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__RawTransactionWithData$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-JPDT6E3B.mjs [app-ssr] (ecmascript) <export b as RawTransactionWithData>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$AYKZA676$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__AccountAuthenticator$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-AYKZA676.mjs [app-ssr] (ecmascript) <export a as AccountAuthenticator>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$F74FF323$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__TransactionPayload$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-F74FF323.mjs [app-ssr] (ecmascript) <export b as TransactionPayload>");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
function isBcsSerializableV1(value) {
    return value?.serialize !== void 0;
}
function isBcsSerializableV2(value) {
    return value?.serialize !== void 0 && value?.bcsToBytes !== void 0 && value?.bcsToHex !== void 0;
}
function isBcsSerializable(value) {
    return isBcsSerializableV1(value) || isBcsSerializableV2(value);
}
function bcsSerialize(serializable) {
    if (isBcsSerializableV2(serializable)) {
        return serializable.bcsToHex().toString();
    }
    const serializedValueBytes = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$aptos$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BCS"].bcsToBytes(serializable);
    return __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__["Hex"].fromHexInput(serializedValueBytes).toString();
}
function bcsDeserialize(deserializableClass, serializedValue) {
    const serializedValueBytes = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__["Hex"].fromHexString(serializedValue).toUint8Array();
    const deserializer = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$DZXM2MQY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Deserializer$3e$__["Deserializer"](serializedValueBytes);
    return deserializableClass.deserialize(deserializer);
}
;
// src/serialization/error.ts
var UnexpectedValueError = class _UnexpectedValueError extends Error {
    constructor(message){
        super(message);
        this.name = "UnexpectedValueError";
        Object.setPrototypeOf(this, _UnexpectedValueError.prototype);
    }
};
// src/serialization/jsonPayload.ts
function isSerializedUint8Array(arg) {
    return arg?.type === "Uint8Array" && typeof arg?.value === "string";
}
function serializeEntryFunctionArg(arg) {
    if (arg instanceof Uint8Array) {
        return {
            type: "Uint8Array",
            value: __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__["Hex"].fromHexInput(arg).toString()
        };
    }
    if (Array.isArray(arg)) {
        return arg.map(serializeEntryFunctionArg);
    }
    return arg;
}
function deserializeEntryFunctionArg(arg) {
    if (isSerializedUint8Array(arg)) {
        return __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__["Hex"].fromHexInput(arg.value).toUint8Array();
    }
    if (Array.isArray(arg)) {
        return arg.map(deserializeEntryFunctionArg);
    }
    return arg;
}
function serializeEntryFunctionPayload(payload) {
    const normalizedArgs = payload.arguments.map(serializeEntryFunctionArg);
    return {
        ...payload,
        arguments: normalizedArgs,
        type: "entry_function_payload"
    };
}
function deserializeEntryFunctionPayload(payload) {
    const deserializedArgs = payload.arguments.map(deserializeEntryFunctionArg);
    return {
        ...payload,
        arguments: deserializedArgs,
        type: "entry_function_payload"
    };
}
function serializeJsonTransactionPayload(payload) {
    if (payload.type === "entry_function_payload" || payload.type === void 0) {
        return serializeEntryFunctionPayload(payload);
    }
    if (payload.type === "multisig_payload") {
        const innerPayload = payload.transaction_payload !== void 0 ? serializeEntryFunctionPayload(payload.transaction_payload) : void 0;
        return {
            ...payload,
            transaction_payload: innerPayload
        };
    }
    throw new UnexpectedValueError();
}
function deserializeJsonTransactionPayload(payload) {
    if (payload.type === "entry_function_payload" || payload.type === void 0) {
        return deserializeEntryFunctionPayload(payload);
    }
    if (payload.type === "multisig_payload") {
        const innerPayload = payload.transaction_payload !== void 0 ? deserializeEntryFunctionPayload(payload.transaction_payload) : void 0;
        return {
            ...payload,
            transaction_payload: innerPayload
        };
    }
    throw new UnexpectedValueError();
}
;
function serializeRawTransaction(rawTxn) {
    const value = bcsSerialize(rawTxn);
    if ("fee_payer_address" in rawTxn) {
        return {
            type: "fee_payer_raw_txn",
            value
        };
    }
    if ("secondary_signer_addresses" in rawTxn) {
        return {
            type: "multi_agent_raw_txn",
            value
        };
    }
    if ("chain_id" in rawTxn) {
        return {
            type: "raw_txn",
            value
        };
    }
    throw new UnexpectedValueError("Invalid raw transaction type");
}
function deserializeRawTransaction(serialized) {
    switch(serialized.type){
        case "raw_txn":
            return bcsDeserialize(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$JPDT6E3B$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__RawTransaction$3e$__["RawTransaction"], serialized.value);
        case "fee_payer_raw_txn":
            return bcsDeserialize(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$JPDT6E3B$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__RawTransactionWithData$3e$__["RawTransactionWithData"], serialized.value);
        case "multi_agent_raw_txn":
            return bcsDeserialize(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$JPDT6E3B$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__RawTransactionWithData$3e$__["RawTransactionWithData"], serialized.value);
        default:
            throw new UnexpectedValueError("Invalid raw transaction type");
    }
}
;
function serializeSignAndSubmitTransactionRequestArgs(args) {
    if ("payload" in args) {
        const serializedPayload = isBcsSerializable(args.payload) ? bcsSerialize(args.payload) : serializeJsonTransactionPayload(args.payload);
        return {
            options: args.options,
            payload: serializedPayload
        };
    }
    if ("feePayerAuthenticator" in args) {
        return {
            feePayerAuthenticator: bcsSerialize(args.feePayerAuthenticator),
            rawTxn: serializeRawTransaction(args.rawTxn)
        };
    }
    if ("rawTxn" in args) {
        return {
            rawTxn: serializeRawTransaction(args.rawTxn)
        };
    }
    throw new UnexpectedValueError();
}
function deserializeSignAndSubmitTransactionRequestArgs(args) {
    if ("payload" in args) {
        const payload = typeof args.payload === "string" ? bcsDeserialize(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$F74FF323$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__TransactionPayload$3e$__["TransactionPayload"], args.payload) : deserializeJsonTransactionPayload(args.payload);
        return {
            options: args.options,
            payload
        };
    }
    if ("feePayerAuthenticator" in args) {
        const deserializedRawTxn = deserializeRawTransaction(args.rawTxn);
        const feePayerAuthenticator = bcsDeserialize(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$AYKZA676$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__AccountAuthenticator$3e$__["AccountAuthenticator"], args.feePayerAuthenticator);
        return {
            feePayerAuthenticator,
            rawTxn: deserializedRawTxn
        };
    }
    if ("rawTxn" in args) {
        const deserializedRawTxn = deserializeRawTransaction(args.rawTxn);
        return {
            rawTxn: deserializedRawTxn
        };
    }
    throw new UnexpectedValueError();
}
;
function serializeSignTransactionRequestArgs(args) {
    if ("payload" in args) {
        const serializedPayload = isBcsSerializable(args.payload) ? bcsSerialize(args.payload) : serializeJsonTransactionPayload(args.payload);
        return {
            options: args.options,
            payload: serializedPayload
        };
    }
    if ("rawTxn" in args) {
        const serializedRawTxn = serializeRawTransaction(args.rawTxn);
        return {
            rawTxn: serializedRawTxn
        };
    }
    throw new UnexpectedValueError();
}
function deserializeSignTransactionRequestArgs(args) {
    if ("payload" in args) {
        const payload = typeof args.payload === "string" ? bcsDeserialize(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$F74FF323$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__TransactionPayload$3e$__["TransactionPayload"], args.payload) : deserializeJsonTransactionPayload(args.payload);
        return {
            options: args.options,
            payload
        };
    }
    if ("rawTxn" in args) {
        const deserializedRawTxn = deserializeRawTransaction(args.rawTxn);
        return {
            rawTxn: deserializedRawTxn
        };
    }
    throw new UnexpectedValueError();
}
;
function serializeSignTransactionResponseArgs(args) {
    const accountAuthenticator = bcsSerialize(args.accountAuthenticator);
    if ("rawTxn" in args) {
        const rawTxn = bcsSerialize(args.rawTxn);
        return {
            accountAuthenticator,
            rawTxn
        };
    }
    return {
        accountAuthenticator
    };
}
function deserializeSignTransactionResponseArgs(args) {
    const accountAuthenticator = bcsDeserialize(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$AYKZA676$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__AccountAuthenticator$3e$__["AccountAuthenticator"], args.accountAuthenticator);
    if ("rawTxn" in args) {
        const rawTxn = bcsDeserialize(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$JPDT6E3B$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__RawTransaction$3e$__["RawTransaction"], args.rawTxn);
        return {
            accountAuthenticator,
            rawTxn
        };
    }
    return {
        accountAuthenticator
    };
}
// src/utils/makeFullMessage.ts
var prefix = "APTOS";
function makeFullMessage(params, flags) {
    let fullMessage = prefix;
    if (flags.address) {
        fullMessage += `
address: ${params.address}`;
    }
    if (flags.application) {
        fullMessage += `
application: ${params.application}`;
    }
    if (flags.chainId) {
        fullMessage += `
chainId: ${params.chainId}`;
    }
    fullMessage += `
message: ${params.message}`;
    fullMessage += `
nonce: ${params.nonce}`;
    return {
        fullMessage,
        prefix
    };
}
;
 //# sourceMappingURL=index.mjs.map

})()),
"[project]/unexpected/node_modules/@identity-connect/dapp-sdk/dist/index.mjs [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

// src/ACDappClient.ts
__turbopack_esm__({
    "ACDappClient": ()=>ACDappClient,
    "ACKeylessClient": ()=>ACKeylessClient,
    "DAPP_PAIRINGS_WINDOW_STORAGE_KEY": ()=>DAPP_PAIRINGS_WINDOW_STORAGE_KEY,
    "ICDappClient": ()=>ICDappClient,
    "windowStateAccessors": ()=>windowStateAccessors
});
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-connect/wallet-api/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$web$2d$transport$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-connect/web-transport/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/index.mjs [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BF46IXHH$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__AccountAddress$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-BF46IXHH.mjs [app-ssr] (ecmascript) <export b as AccountAddress>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$QVWBJJRF$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__AnySignature$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-QVWBJJRF.mjs [app-ssr] (ecmascript) <export b as AnySignature>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$NMD45OTM$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__AptosConfig$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-NMD45OTM.mjs [app-ssr] (ecmascript) <export a as AptosConfig>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$DZXM2MQY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Deserializer$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-DZXM2MQY.mjs [app-ssr] (ecmascript) <export a as Deserializer>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__c__as__Ed25519Signature$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-A2Z7I2EY.mjs [app-ssr] (ecmascript) <export c as Ed25519Signature>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$JPDT6E3B$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__d__as__FeePayerRawTransaction$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-JPDT6E3B.mjs [app-ssr] (ecmascript) <export d as FeePayerRawTransaction>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$QAMV4L3K$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__e__as__generateRawTransaction$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-QAMV4L3K.mjs [app-ssr] (ecmascript) <export e as generateRawTransaction>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$QAMV4L3K$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__generateTransactionPayload$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-QAMV4L3K.mjs [app-ssr] (ecmascript) <export a as generateTransactionPayload>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$QAMV4L3K$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__generateTransactionPayloadWithABI$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-QAMV4L3K.mjs [app-ssr] (ecmascript) <export b as generateTransactionPayloadWithABI>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/@aptos-labs/ts-sdk/dist/esm/chunk-BCUSI3N6.mjs [app-ssr] (ecmascript) <export b as Hex>");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/@identity-connect/api/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/@identity-connect/crypto/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/@identity-connect/wallet-api/dist/index.mjs [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$axios$2f$lib$2f$axios$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/unexpected/node_modules/axios/lib/axios.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$axios$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/unexpected/node_modules/axios/index.js [app-ssr] (ecmascript) <locals>");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
;
;
// src/constants.ts
var DEFAULT_FRONTEND_URL = "https://aptosconnect.app";
;
;
;
;
;
// src/errors.ts
var SignatureRequestError = class _SignatureRequestError extends Error {
    constructor(status){
        super(status);
        this.name = "SignatureRequestError";
        Object.setPrototypeOf(this, _SignatureRequestError.prototype);
    }
};
var UnexpectedSignatureResponseError = class _UnexpectedSignatureResponseError extends Error {
    constructor(missingFields){
        const message = `Missing the following fields: ${missingFields.join(", ")}`;
        super(message);
        this.name = "UnexpectedSignatureResponseError";
        Object.setPrototypeOf(this, _UnexpectedSignatureResponseError.prototype);
    }
};
var PairingExpiredError = class _PairingExpiredError extends Error {
    constructor(){
        super();
        this.name = "PairingExpiredError";
        Object.setPrototypeOf(this, _PairingExpiredError.prototype);
    }
};
var UnregisteredDappError = class _UnregisteredDappError extends Error {
    constructor(){
        super("Dapp ID is invalid or not associated with a registered Dapp.");
        this.name = "UnregisteredDappError";
        Object.setPrototypeOf(this, _UnregisteredDappError.prototype);
    }
};
// src/state.ts
var DAPP_PAIRINGS_WINDOW_STORAGE_KEY = "icDappPairings";
var windowStateAccessors = {
    async get (address) {
        const pairings = await this.getAll();
        return pairings[address];
    },
    async getAll () {
        const serialized = window.localStorage.getItem(DAPP_PAIRINGS_WINDOW_STORAGE_KEY);
        return serialized ? JSON.parse(serialized) : {};
    },
    async update (address, pairing) {
        const pairings = await this.getAll();
        if (pairing === void 0) {
            delete pairings[address];
        } else {
            pairings[address] = pairing;
        }
        const newSerialized = JSON.stringify(pairings);
        window.localStorage.setItem(DAPP_PAIRINGS_WINDOW_STORAGE_KEY, newSerialized);
    }
};
// src/utils.ts
var SIGN_MESSAGE_RESPONSE_REQUIRED_FIELDS = [
    "address",
    "application",
    "chainId",
    "fullMessage",
    "message",
    "nonce",
    "prefix",
    "signature"
];
function validateSignMessageResponse(response) {
    const providedFields = new Set(Object.keys(response));
    const missingFields = SIGN_MESSAGE_RESPONSE_REQUIRED_FIELDS.filter((field)=>!providedFields.has(field));
    if (missingFields.length > 0) {
        throw new UnexpectedSignatureResponseError(missingFields);
    }
}
var SIGN_AND_SUBMIT_TRANSACTION_RESPONSE_REQUIRED_FIELDS = [
    "hash"
];
function validateSignAndSubmitTransactionResponse(response) {
    const providedFields = new Set(Object.keys(response));
    const missingFields = SIGN_AND_SUBMIT_TRANSACTION_RESPONSE_REQUIRED_FIELDS.filter((field)=>!providedFields.has(field));
    if (missingFields.length > 0) {
        throw new UnexpectedSignatureResponseError(missingFields);
    }
}
// src/PairingClient.ts
var API_VERSION = "0.2.0";
var SIGNING_REQUEST_POLLING_INTERVAL = 2500;
var SEQUENCE_NUMBER_MISMATCH_PATTERN = /^Sequence number mismatch, expected (?:\S+ to be )?(\d+)/;
async function waitFor(milliseconds) {
    return new Promise((resolve)=>{
        setTimeout(resolve, milliseconds);
    });
}
async function withRetries(requestFn, onError, retries = 1) {
    for(let i = 0; i < retries; i += 1){
        try {
            return await requestFn();
        } catch (err) {
            onError(err);
        }
    }
    return requestFn();
}
var ACPairingClient = class {
    constructor({ accessors = windowStateAccessors, axiosConfig, defaultNetworkName = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NetworkName"].MAINNET } = {}){
        // endregion
        this.onDisconnectListeners = /* @__PURE__ */ new Set();
        this.accessors = accessors;
        this.defaultNetworkName = defaultNetworkName;
        this.axiosInstance = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$axios$2f$lib$2f$axios$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].create({
            baseURL: DEFAULT_FRONTEND_URL,
            ...axiosConfig
        });
        const isClientSideRendering = typeof window !== "undefined";
        this.initPromise = isClientSideRendering ? this.syncFirstPairing() : void 0;
    }
    async getPairing(id) {
        const response = await this.axiosInstance.get(`v1/pairing/${id}/`);
        return response.data.data.pairing;
    }
    async syncFirstPairing() {
        const pairings = await this.accessors.getAll();
        const firstPairing = Object.values(pairings)[0];
        if (firstPairing === void 0) {
            return;
        }
        try {
            const { dappSpecificWallet, maxDappSequenceNumber } = await this.getPairing(firstPairing.pairingId);
            await this.accessors.update(firstPairing.accountAddress, {
                ...firstPairing,
                currSequenceNumber: maxDappSequenceNumber,
                dappWalletId: dappSpecificWallet?.id
            });
        } catch (err) {
            await this.accessors.update(firstPairing.accountAddress, void 0);
        }
    }
    async createSigningRequest(pairing, type, networkName, requestBody) {
        const dappEd25519SecretKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.dappEd25519SecretKeyB64);
        const dappEd25519PublicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.dappEd25519PublicKeyB64);
        const accountTransportEd25519PublicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.accountTransportEd25519PublicKeyB64);
        let sequenceNumber = pairing.currSequenceNumber + 1;
        return withRetries(async ()=>{
            const requestEnvelope = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encryptAndSignEnvelope"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])(dappEd25519SecretKey, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519SecretKey), (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])(dappEd25519PublicKey, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519PublicKey), (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])(accountTransportEd25519PublicKey, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519PublicKey), sequenceNumber, {
                apiVersion: API_VERSION,
                networkName,
                requestType: type
            }, requestBody);
            const response = await this.axiosInstance.post(`v1/pairing/${pairing.pairingId}/signing-request/`, requestEnvelope);
            await this.accessors.update(pairing.accountAddress, {
                ...pairing,
                currSequenceNumber: sequenceNumber
            });
            return response.data.data.signingRequest;
        }, (err)=>{
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$axios$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["isAxiosError"])(err)) {
                const errorMessage = err.response?.data?.message;
                const expectedSequenceNumber = errorMessage?.match(SEQUENCE_NUMBER_MISMATCH_PATTERN)?.[1];
                if (expectedSequenceNumber !== void 0) {
                    sequenceNumber = Number(expectedSequenceNumber);
                    return;
                }
            }
            throw err;
        });
    }
    async getSigningRequest(id) {
        const response = await this.axiosInstance.get(`v1/signing-request/${id}/`, {
            validateStatus: (status)=>status === 200 || status === 404
        });
        return response.data?.data?.signingRequest;
    }
    async deletePairing(pairingId, secretKey, publicKey) {
        const requestEnvelope = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encryptAndSignEnvelope"])(secretKey, publicKey, publicKey, 0, // ignored
        {}, {});
        await this.axiosInstance.post(`v1/pairing/${pairingId}/delete/`, requestEnvelope, {
            validateStatus: (status)=>status === 204 || status === 404
        });
    }
    async cancelSigningRequest(pairing, id) {
        const sequenceNumber = pairing.currSequenceNumber;
        const dappEd25519SecretKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.dappEd25519SecretKeyB64);
        const dappEd25519PublicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.dappEd25519PublicKeyB64);
        const accountTransportEd25519PublicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.accountTransportEd25519PublicKeyB64);
        const requestEnvelope = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encryptAndSignEnvelope"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])(dappEd25519SecretKey, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519SecretKey), (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])(dappEd25519PublicKey, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519PublicKey), (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])(accountTransportEd25519PublicKey, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519PublicKey), sequenceNumber + 1, {}, {});
        const response = await this.axiosInstance.patch(`v1/signing-request/${id}/cancel/`, requestEnvelope);
        await this.accessors.update(pairing.accountAddress, {
            ...pairing,
            currSequenceNumber: sequenceNumber + 1
        });
        return response.data.data.signingRequest;
    }
    async signRequest(address, type, requestBody, { cancelToken, networkName } = {}) {
        await this.initPromise;
        const pairing = await this.accessors.get(address);
        if (pairing === void 0) {
            throw new Error("The requested account is not paired");
        }
        let signingRequest;
        try {
            signingRequest = await this.createSigningRequest(pairing, type, networkName || this.defaultNetworkName, requestBody);
            while(signingRequest.status === "PENDING"){
                await waitFor(SIGNING_REQUEST_POLLING_INTERVAL);
                if (cancelToken?.cancelled) {
                    signingRequest.status = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SigningRequestStatus"].CANCELLED;
                    break;
                }
                signingRequest = await this.getSigningRequest(signingRequest.id) ?? signingRequest;
            }
        } catch (err) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$axios$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["isAxiosError"])(err) && err.code === "404") {
                await this.accessors.update(address, void 0);
                for (const listener of this.onDisconnectListeners){
                    listener(address);
                }
                throw new PairingExpiredError();
            }
            throw err;
        }
        if (signingRequest.status !== "APPROVED") {
            throw new SignatureRequestError(signingRequest.status);
        }
        const decrypted = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decryptEnvelope"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.accountTransportEd25519PublicKeyB64), __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519PublicKey), (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.dappEd25519SecretKeyB64), __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519SecretKey), signingRequest.responseEnvelope);
        return decrypted.privateMessage;
    }
    // region Public API
    /**
   * Requests a connection to an account (internally known as pairing).
   * @returns either the address of the connected account, or undefined if the
   * connection was cancelled.
   */ async addPairing({ publicKey, secretKey }, finalizedPairing) {
        await this.accessors.update(finalizedPairing.account.accountAddress, {
            accountAddress: finalizedPairing.account.accountAddress,
            accountAlias: finalizedPairing.account.userSubmittedAlias ?? void 0,
            accountPublicKeyB64: finalizedPairing.account.publicKeyB64,
            accountTransportEd25519PublicKeyB64: finalizedPairing.account.transportEd25519PublicKeyB64,
            currSequenceNumber: finalizedPairing.maxDappSequenceNumber,
            dappEd25519PublicKeyB64: (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encodeBase64"])(publicKey.key),
            dappEd25519SecretKeyB64: (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encodeBase64"])(secretKey.key),
            dappWalletId: finalizedPairing.dappSpecificWalletId,
            pairingId: finalizedPairing.id
        });
    }
    async disconnect(address) {
        const pairing = await this.accessors.get(address);
        if (pairing === void 0) {
            throw new Error("The specified account is not paired");
        }
        const dappEd25519SecretKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.dappEd25519SecretKeyB64);
        const dappEd25519PublicKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["decodeBase64"])(pairing.dappEd25519PublicKeyB64);
        await this.deletePairing(pairing.pairingId, (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])(dappEd25519SecretKey, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519SecretKey), (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toKey"])(dappEd25519PublicKey, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["KeyTypes"].Ed25519PublicKey));
        await this.accessors.update(address, void 0);
        for (const listener of this.onDisconnectListeners){
            listener(address);
        }
    }
    async signMessage(address, args, options) {
        const response = await this.signRequest(address, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SigningRequestTypes"].SIGN_MESSAGE, args, options);
        validateSignMessageResponse(response);
        return response;
    }
    async signTransaction(address, args, options) {
        const serializedRequestArgs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["serializeSignTransactionRequestArgs"])(args);
        const serializedResponseArgs = await this.signRequest(address, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SigningRequestTypes"].SIGN_TRANSACTION, serializedRequestArgs, options);
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["deserializeSignTransactionResponseArgs"])(serializedResponseArgs);
    }
    // endregion
    async signAndSubmitTransaction(address, args, options) {
        const serializedRequestArgs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["serializeSignAndSubmitTransactionRequestArgs"])(args);
        try {
            const responseArgs = await this.signRequest(address, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SigningRequestTypes"].SIGN_AND_SUBMIT_TRANSACTION, serializedRequestArgs, options);
            validateSignAndSubmitTransactionResponse(responseArgs);
            return responseArgs;
        } catch (e) {
            if (e instanceof __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$axios$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["AxiosError"] && e.response?.data?.message) {
                throw new Error(e.response?.data?.message);
            }
            throw e;
        }
    }
    async getConnectedAccounts() {
        await this.initPromise;
        const pairings = await this.accessors.getAll();
        return Object.values(pairings).map(({ accountAddress, accountEd25519PublicKeyB64, accountPublicKeyB64 })=>({
                address: __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BF46IXHH$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__AccountAddress$3e$__["AccountAddress"].from(accountAddress),
                publicKey: accountPublicKeyB64 !== void 0 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["deserializePublicKeyB64"])(accountPublicKeyB64) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["deserializeEd25519PublicKeyB64"])(accountEd25519PublicKeyB64)
            }));
    }
    onDisconnect(listener) {
        this.onDisconnectListeners.add(listener);
        return ()=>this.onDisconnectListeners.delete(listener);
    }
};
// src/ACDappClient.ts
var ACDappClient = class {
    constructor({ backendBaseURL, dappId, dappImageURI, dappName, defaultNetworkName = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NetworkName"].MAINNET, frontendBaseURL = DEFAULT_FRONTEND_URL } = {}){
        this.defaultNetworkName = defaultNetworkName;
        this.dappInfo = {
            domain: window.location.origin,
            imageURI: dappImageURI,
            name: dappName ?? document.title
        };
        this.transport = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$web$2d$transport$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WebWalletTransport"](frontendBaseURL);
        this.dappId = dappId;
        this.pairingClient = new ACPairingClient({
            axiosConfig: {
                baseURL: backendBaseURL ?? frontendBaseURL
            },
            defaultNetworkName
        });
    }
    // region Public API
    async getKeylessAccounts() {
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GetConnectedAccountsRequest"].serialize(this.dappInfo);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GetConnectedAccountsResponse"].deserialize(serializedResponse);
        return response.args;
    }
    async getIcAccounts() {
        return this.pairingClient.getConnectedAccounts() ?? [];
    }
    async isIcAccount(address) {
        const icAccounts = await this.getIcAccounts();
        return icAccounts.find((account)=>account.address.equals(__TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BF46IXHH$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__AccountAddress$3e$__["AccountAddress"].from(address))) !== void 0;
    }
    async getConnectedAccounts() {
        const keylessAccounts = await this.getKeylessAccounts();
        const icAccounts = await this.getIcAccounts();
        return [
            ...keylessAccounts,
            ...icAccounts
        ];
    }
    async disconnect(address) {
        if (await this.isIcAccount(address)) {
            const stringAddress = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BF46IXHH$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__AccountAddress$3e$__["AccountAddress"].from(address).toString();
            await this.pairingClient.disconnect(stringAddress);
        } else {
            const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DisconnectRequest"].serialize(this.dappInfo);
            await this.transport.sendRequest(serializedRequest);
        }
    }
    async connect() {
        const dappKeypair = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createEd25519KeyPair"])();
        const requestArgs = {
            dappEd25519PublicKeyB64: (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encodeBase64"])(dappKeypair.publicKey.key),
            dappId: this.dappId
        };
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConnectRequest"].serialize(this.dappInfo, requestArgs);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConnectResponse"].deserialize(serializedResponse);
        if (response.args.status === "approved") {
            const { account, pairing } = response.args.args;
            if (pairing) {
                await this.pairingClient.addPairing(dappKeypair, pairing);
            }
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["makeUserApproval"])({
                account
            });
        }
        return response.args;
    }
    async signMessage(args) {
        const { signerAddress } = args;
        if (await this.isIcAccount(signerAddress)) {
            const { chainId } = args;
            const network = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["chainIdToNetwork"])(chainId);
            let message;
            let nonce;
            try {
                message = new TextDecoder().decode(args.message);
                nonce = new TextDecoder().decode(args.nonce);
            } catch (err) {
                throw new Error("Only UTF-8 encoded text is supported when using IC");
            }
            const { fullMessage, signature: hexSignature } = await this.pairingClient.signMessage(signerAddress.toString(), {
                address: true,
                application: true,
                chainId: true,
                message,
                nonce
            }, {
                networkName: network
            });
            const signatureBytes = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$BCUSI3N6$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__Hex$3e$__["Hex"].fromHexInput(hexSignature).toUint8Array();
            const signature = signatureBytes.length === __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__c__as__Ed25519Signature$3e$__["Ed25519Signature"].LENGTH ? new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$A2Z7I2EY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__c__as__Ed25519Signature$3e$__["Ed25519Signature"](signatureBytes) : __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$QVWBJJRF$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__AnySignature$3e$__["AnySignature"].deserialize(new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$DZXM2MQY$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__Deserializer$3e$__["Deserializer"](signatureBytes));
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["makeUserApproval"])({
                fullMessage,
                signature
            });
        }
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignMessageRequest"].serialize(this.dappInfo, args);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignMessageResponse"].deserialize(serializedResponse);
        return response.args;
    }
    async signTransaction(args) {
        const normalizedArgs = "transaction" in args ? __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignTransactionRequest"].normalizeArgs(args) : args;
        const { signerAddress } = args;
        if (await this.isIcAccount(signerAddress)) {
            const { expirationSecondsFromNow, expirationTimestamp, feePayer, gasUnitPrice, maxGasAmount, network, payload, secondarySigners, sender, sequenceNumber } = normalizedArgs;
            if (feePayer !== void 0) {
                throw new Error("Sponsored transaction not currently supported");
            }
            if (secondarySigners && secondarySigners.length > 0) {
                throw new Error("Multi-agent transactions not currently supported");
            }
            if (!("bcsToBytes" in payload)) {
                throw new Error("Payload input format is only supported with Keyless accounts.");
            }
            const responseArgs = await this.pairingClient.signTransaction(signerAddress.toString(), {
                options: {
                    expirationSecondsFromNow,
                    expirationTimestamp,
                    gasUnitPrice,
                    maxGasAmount,
                    sender: sender?.address.toString(),
                    sequenceNumber: sequenceNumber !== void 0 ? Number(sequenceNumber) : void 0
                },
                payload
            }, {
                networkName: network
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["makeUserApproval"])({
                authenticator: responseArgs.accountAuthenticator,
                rawTransaction: responseArgs.rawTxn
            });
        }
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignTransactionRequest"].serialize(this.dappInfo, normalizedArgs);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignTransactionResponse"].deserialize(serializedResponse);
        return response.args;
    }
    async signAndSubmitTransaction(args) {
        const { signerAddress } = args;
        if (await this.isIcAccount(signerAddress)) {
            const { expirationTimestamp, feePayer, gasUnitPrice, maxGasAmount, network } = args;
            const aptosConfig = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$NMD45OTM$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__AptosConfig$3e$__["AptosConfig"]({
                network
            });
            let payload;
            if ("bcsToBytes" in args.payload) {
                payload = args.payload;
            } else if ("bytecode" in args.payload) {
                payload = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$QAMV4L3K$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__generateTransactionPayload$3e$__["generateTransactionPayload"])(args.payload);
            } else {
                payload = args.payload.abi !== void 0 ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$QAMV4L3K$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__b__as__generateTransactionPayloadWithABI$3e$__["generateTransactionPayloadWithABI"])({
                    ...args.payload,
                    abi: args.payload.abi
                }) : await (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$QAMV4L3K$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__a__as__generateTransactionPayload$3e$__["generateTransactionPayload"])({
                    aptosConfig,
                    ...args.payload
                });
            }
            let convertedArgs;
            if (feePayer !== void 0) {
                const rawTxn = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$QAMV4L3K$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__e__as__generateRawTransaction$3e$__["generateRawTransaction"])({
                    aptosConfig,
                    feePayerAddress: feePayer.address,
                    options: {
                        gasUnitPrice,
                        maxGasAmount
                    },
                    payload,
                    sender: signerAddress
                });
                convertedArgs = {
                    feePayerAuthenticator: feePayer.authenticator,
                    rawTxn: new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$labs$2f$ts$2d$sdk$2f$dist$2f$esm$2f$chunk$2d$JPDT6E3B$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__d__as__FeePayerRawTransaction$3e$__["FeePayerRawTransaction"](rawTxn, [], feePayer.address)
                };
            } else {
                convertedArgs = {
                    options: {
                        expirationTimestamp,
                        gasUnitPrice,
                        maxGasAmount
                    },
                    payload
                };
            }
            const { hash } = await this.pairingClient.signAndSubmitTransaction(signerAddress.toString(), convertedArgs, {
                networkName: network
            });
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["makeUserApproval"])({
                txnHash: hash
            });
        }
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignAndSubmitTransactionRequest"].serialize(this.dappInfo, args);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignAndSubmitTransactionResponse"].deserialize(serializedResponse);
        return response.args;
    }
};
;
;
// src/prompt.ts
var DEFAULT_PROMPT_SIZE = {
    height: 695,
    width: 465
};
var PROMPT_POLLER_INTERVAL = 500;
function openPrompt(url, size = DEFAULT_PROMPT_SIZE) {
    const { height, width } = size;
    const options = {
        height,
        left: window.screenLeft + Math.round((window.outerWidth - width) / 2),
        popup: true,
        top: window.screenTop + Math.round((window.outerHeight - height) / 2),
        width
    };
    const strOptions = Object.entries(options).map(([key, value])=>`${key}=${JSON.stringify(value)}`).reduce((acc, entry)=>`${acc}, ${entry}`);
    const href = url instanceof URL ? url.href : url;
    const promptWindow = window.open(href, void 0, strOptions);
    if (promptWindow === null) {
        throw new Error("Couldn't open prompt");
    }
    return promptWindow;
}
async function waitForPromptResponse(promptWindow) {
    return new Promise((resolve)=>{
        const listeners = {
            onMessage: (message)=>{
                if (message.source !== promptWindow) {
                    return;
                }
                window.removeEventListener("message", listeners.onMessage);
                clearTimeout(listeners.promptPollerId);
                resolve({
                    args: message.data,
                    status: "approved"
                });
            },
            promptPollerId: setInterval(()=>{
                if (promptWindow.closed) {
                    window.removeEventListener("message", listeners.onMessage);
                    clearTimeout(listeners.promptPollerId);
                    resolve({
                        status: "dismissed"
                    });
                }
            }, PROMPT_POLLER_INTERVAL)
        };
        window.addEventListener("message", listeners.onMessage);
    });
}
// src/ICDappClient.ts
var ICDappClient = class extends ACPairingClient {
    constructor(dappId, { frontendBaseURL = DEFAULT_FRONTEND_URL, ...pairingClientConfig } = {}){
        super(pairingClientConfig);
        this.dappId = dappId;
        this.frontendBaseURL = frontendBaseURL;
    }
    async createPairingRequest(dappEd25519PublicKeyB64) {
        try {
            const response = await this.axiosInstance.post("v1/pairing/", {
                dappEd25519PublicKeyB64,
                dappId: this.dappId
            });
            return response.data.data.pairing;
        } catch (err) {
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f$axios$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__["isAxiosError"])(err) && err.response?.data?.message === "Dapp not found") {
                throw new UnregisteredDappError();
            }
            throw err;
        }
    }
    // region Public API
    /**
   * Requests a connection to an account (internally known as pairing).
   * @returns either the address of the connected account, or undefined if the
   * connection was cancelled.
   */ async connect() {
        const { publicKey, secretKey } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createEd25519KeyPair"])();
        const dappEd25519PublicKeyB64 = (0, __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$crypto$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encodeBase64"])(publicKey.key);
        const url = new URL(`${this.frontendBaseURL}/pairing`);
        const promptWindow = await openPrompt(url.href);
        let pairingId;
        try {
            const pendingPairing = await this.createPairingRequest(dappEd25519PublicKeyB64);
            pairingId = pendingPairing.id;
        } catch (err) {
            promptWindow.close();
            throw err;
        }
        url.searchParams.set("pairingId", pairingId);
        promptWindow.location.href = url.href;
        const promptResponse = await waitForPromptResponse(promptWindow);
        if (promptResponse.status === "dismissed") {
            void this.deletePairing(pairingId, secretKey, publicKey);
            return void 0;
        }
        const finalizedPairing = promptResponse.args;
        await this.addPairing({
            publicKey,
            secretKey
        }, finalizedPairing);
        return finalizedPairing.account.accountAddress;
    }
    async offboard(address) {
        const pairing = await this.accessors.get(address);
        if (pairing === void 0) {
            throw new Error("This account is not paired");
        }
        const walletId = pairing.dappWalletId;
        if (walletId === void 0) {
            throw new Error("This account cannot be offboarded");
        }
        const url = new URL(`${this.frontendBaseURL}/offboarding?walletId=${walletId}`);
        const promptWindow = openPrompt(url);
        const response = await waitForPromptResponse(promptWindow);
        if (response.status === "approved" && response.args.offboarded) {
            this.disconnect(address);
            return true;
        }
        return false;
    }
};
;
;
;
var ACKeylessClient = class {
    constructor({ dappImageURI, dappName, defaultNetworkName = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$identity$2d$connect$2f$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["NetworkName"].MAINNET, frontendBaseURL = DEFAULT_FRONTEND_URL } = {}){
        this.defaultNetworkName = defaultNetworkName;
        this.dappInfo = {
            domain: window.location.origin,
            imageURI: dappImageURI,
            name: dappName ?? document.title
        };
        this.transport = new __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$web$2d$transport$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WebWalletTransport"](frontendBaseURL);
    }
    // region Public API
    async isConnected() {
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["IsConnectedRequest"].serialize(this.dappInfo);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["IsConnectedResponse"].deserialize(serializedResponse);
        return response.args;
    }
    async getConnectedAccounts() {
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GetConnectedAccountsRequest"].serialize(this.dappInfo);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["GetConnectedAccountsResponse"].deserialize(serializedResponse);
        return response.args;
    }
    async disconnect() {
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DisconnectRequest"].serialize(this.dappInfo);
        await this.transport.sendRequest(serializedRequest);
    }
    async connect() {
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConnectRequest"].serialize(this.dappInfo);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConnectResponse"].deserialize(serializedResponse);
        return response.args;
    }
    async signMessage(args) {
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignMessageRequest"].serialize(this.dappInfo, args);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignMessageResponse"].deserialize(serializedResponse);
        return response.args;
    }
    async signTransaction(args) {
        const normalizedArgs = "transaction" in args ? __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignTransactionRequest"].normalizeArgs(args) : args;
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignTransactionRequest"].serialize(this.dappInfo, normalizedArgs);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignTransactionResponse"].deserialize(serializedResponse);
        return response.args;
    }
    async signAndSubmitTransaction(args) {
        const serializedRequest = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignAndSubmitTransactionRequest"].serialize(this.dappInfo, args);
        const serializedResponse = await this.transport.sendRequest(serializedRequest);
        const response = __TURBOPACK__imported__module__$5b$project$5d2f$unexpected$2f$node_modules$2f40$aptos$2d$connect$2f$wallet$2d$api$2f$dist$2f$index$2e$mjs__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["SignAndSubmitTransactionResponse"].deserialize(serializedResponse);
        return response.args;
    }
};
;
 //# sourceMappingURL=index.mjs.map

})()),

};

//# sourceMappingURL=node_modules_%40identity-connect_e4ffef._.js.map